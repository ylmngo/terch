<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>net/http.(*routingNode).matchPath (1 samples, 0.05%)</title><rect x="370.7" y="437" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="373.73" y="447.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.05%)</title><rect x="362.9" y="469" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="365.94" y="479.5" ></text>
</g>
<g >
<title>syscall.Bind (20 samples, 0.94%)</title><rect x="56.1" y="405" width="11.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="59.13" y="415.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrint (7 samples, 0.33%)</title><rect x="960.4" y="309" width="3.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="963.45" y="319.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.05%)</title><rect x="430.8" y="133" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="433.75" y="143.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.05%)</title><rect x="348.5" y="325" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="351.49" y="335.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (6 samples, 0.28%)</title><rect x="960.4" y="293" width="3.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="963.45" y="303.5" ></text>
</g>
<g >
<title>runtime.convT64 (2 samples, 0.09%)</title><rect x="788.1" y="389" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="791.14" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.05%)</title><rect x="1006.0" y="469" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1009.02" y="479.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.05%)</title><rect x="430.2" y="85" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="433.20" y="95.5" ></text>
</g>
<g >
<title>database/sql.(*driverConn).validateConnection (5 samples, 0.24%)</title><rect x="594.2" y="357" width="2.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="597.16" y="367.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (1 samples, 0.05%)</title><rect x="398.5" y="149" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="401.52" y="159.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.05%)</title><rect x="1035.5" y="485" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1038.48" y="495.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteByte (1 samples, 0.05%)</title><rect x="756.5" y="437" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="759.46" y="447.5" ></text>
</g>
<g >
<title>database/sql.(*DB).QueryContext.func1 (357 samples, 16.82%)</title><rect x="381.3" y="405" width="198.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="384.29" y="415.5" >database/sql.(*DB).QueryCo..</text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.05%)</title><rect x="1136.1" y="533" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1139.09" y="543.5" ></text>
</g>
<g >
<title>net/http.(*mapping[go.shape.string,go.shape.*uint8]).find (2 samples, 0.09%)</title><rect x="369.6" y="437" width="1.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="372.61" y="447.5" ></text>
</g>
<g >
<title>runtime.gcDrain (10 samples, 0.47%)</title><rect x="1039.9" y="501" width="5.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1042.93" y="511.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (1 samples, 0.05%)</title><rect x="578.0" y="293" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="581.05" y="303.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.05%)</title><rect x="1136.1" y="517" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1139.09" y="527.5" ></text>
</g>
<g >
<title>runtime.pollInfo.closing (2 samples, 0.09%)</title><rect x="563.6" y="165" width="1.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="566.59" y="175.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.05%)</title><rect x="92.8" y="373" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="95.82" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="866.0" y="133" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="868.96" y="143.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.05%)</title><rect x="102.3" y="517" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="105.27" y="527.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.05%)</title><rect x="878.2" y="149" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="881.19" y="159.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="166.7" y="469" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="169.74" y="479.5" ></text>
</g>
<g >
<title>net/http.(*routingNode).match (4 samples, 0.19%)</title><rect x="369.1" y="469" width="2.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="372.06" y="479.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (3 samples, 0.14%)</title><rect x="142.3" y="501" width="1.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="145.28" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="164.5" y="389" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="167.52" y="399.5" ></text>
</g>
<g >
<title>net/url.parse (9 samples, 0.42%)</title><rect x="130.6" y="485" width="5.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="133.61" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="618.1" y="293" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="621.06" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="159.5" y="469" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="162.51" y="479.5" ></text>
</g>
<g >
<title>strings.Count (2 samples, 0.09%)</title><rect x="754.8" y="421" width="1.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="757.80" y="431.5" ></text>
</g>
<g >
<title>context.withCancel (11 samples, 0.52%)</title><rect x="108.9" y="517" width="6.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="111.94" y="527.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readContinuedLineSlice (5 samples, 0.24%)</title><rect x="148.4" y="485" width="2.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="151.40" y="495.5" ></text>
</g>
<g >
<title>net/http.serverHandler.ServeHTTP (1,109 samples, 52.24%)</title><rect x="366.8" y="533" width="616.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="369.83" y="543.5" >net/http.serverHandler.ServeHTTP</text>
</g>
<g >
<title>internal/bytealg.MakeNoZero (2 samples, 0.09%)</title><rect x="760.9" y="389" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="763.91" y="399.5" ></text>
</g>
<g >
<title>reflect.intFromReg (3 samples, 0.14%)</title><rect x="921.0" y="229" width="1.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="923.98" y="239.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.05%)</title><rect x="136.7" y="501" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="139.73" y="511.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (1 samples, 0.05%)</title><rect x="1033.8" y="469" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1036.82" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="400.2" y="197" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="403.18" y="207.5" ></text>
</g>
<g >
<title>internal/poll.convertErr (1 samples, 0.05%)</title><rect x="1006.6" y="469" width="0.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1009.58" y="479.5" ></text>
</g>
<g >
<title>runtime.gcDrain (1 samples, 0.05%)</title><rect x="1137.2" y="517" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1140.20" y="527.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.05%)</title><rect x="200.6" y="469" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="203.65" y="479.5" ></text>
</g>
<g >
<title>strings.(*Builder).grow (4 samples, 0.19%)</title><rect x="865.4" y="165" width="2.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="868.40" y="175.5" ></text>
</g>
<g >
<title>runtime.empty (3 samples, 0.14%)</title><rect x="112.3" y="469" width="1.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="115.27" y="479.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.05%)</title><rect x="569.7" y="229" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="572.71" y="239.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (34 samples, 1.60%)</title><rect x="1160.5" y="453" width="18.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1163.54" y="463.5" ></text>
</g>
<g >
<title>time.preadn (4 samples, 0.19%)</title><rect x="395.2" y="181" width="2.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="398.18" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="173.4" y="437" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="176.41" y="447.5" ></text>
</g>
<g >
<title>internal/syscall/windows.GetAdaptersAddresses (2 samples, 0.09%)</title><rect x="41.7" y="469" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="44.68" y="479.5" ></text>
</g>
<g >
<title>runtime.memmove (3 samples, 0.14%)</title><rect x="876.0" y="85" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="878.96" y="95.5" ></text>
</g>
<g >
<title>runtime.rand (1 samples, 0.05%)</title><rect x="101.2" y="469" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="104.15" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="923.8" y="133" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="926.76" y="143.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Close (10 samples, 0.47%)</title><rect x="586.9" y="229" width="5.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="589.94" y="239.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).QueryContext (294 samples, 13.85%)</title><rect x="410.7" y="309" width="163.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="413.74" y="319.5" >github.com/lib/pq.(*c..</text>
</g>
<g >
<title>fmt.(*pp).doPrint (16 samples, 0.75%)</title><rect x="868.7" y="165" width="8.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="871.74" y="175.5" ></text>
</g>
<g >
<title>runtime.send.goready.func1 (1 samples, 0.05%)</title><rect x="1188.3" y="533" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1191.33" y="543.5" ></text>
</g>
<g >
<title>runtime.makeslice (5 samples, 0.24%)</title><rect x="750.3" y="453" width="2.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="753.35" y="463.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (1 samples, 0.05%)</title><rect x="815.9" y="261" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="818.93" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="621.4" y="309" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="624.40" y="319.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="169.0" y="501" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="171.96" y="511.5" ></text>
</g>
<g >
<title>internal/syscall/windows.WSASocket (3 samples, 0.14%)</title><rect x="68.4" y="421" width="1.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="71.36" y="431.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.05%)</title><rect x="576.9" y="341" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="579.93" y="351.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (9 samples, 0.42%)</title><rect x="914.9" y="213" width="5.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="917.87" y="223.5" ></text>
</g>
<g >
<title>text/template.(*state).notAFunction (1 samples, 0.05%)</title><rect x="790.4" y="357" width="0.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="793.37" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (8 samples, 0.38%)</title><rect x="171.7" y="517" width="4.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="174.74" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (6 samples, 0.28%)</title><rect x="163.4" y="469" width="3.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="166.41" y="479.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (4 samples, 0.19%)</title><rect x="186.7" y="453" width="2.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="189.75" y="463.5" ></text>
</g>
<g >
<title>runtime.traceLocker.ok (1 samples, 0.05%)</title><rect x="561.4" y="85" width="0.5" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="564.37" y="95.5" ></text>
</g>
<g >
<title>github.com/lib/pq.scanLinearArray (117 samples, 5.51%)</title><rect x="632.0" y="373" width="65.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="634.96" y="383.5" >github...</text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.05%)</title><rect x="924.3" y="149" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="927.32" y="159.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.05%)</title><rect x="176.7" y="517" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="179.75" y="527.5" ></text>
</g>
<g >
<title>reflect.(*rtype).common (1 samples, 0.05%)</title><rect x="882.6" y="149" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="885.63" y="159.5" ></text>
</g>
<g >
<title>runtime.newproc (1 samples, 0.05%)</title><rect x="398.5" y="181" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="401.52" y="191.5" ></text>
</g>
<g >
<title>internal/syscall/windows.init.OnceValue[go.shape.bool].func3 (1 samples, 0.05%)</title><rect x="55.0" y="405" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="58.02" y="415.5" ></text>
</g>
<g >
<title>net.(*sysDialer).dialSingle (54 samples, 2.54%)</title><rect x="42.8" y="517" width="30.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="45.79" y="527.5" >ne..</text>
</g>
<g >
<title>net/http.stripHostPort (2 samples, 0.09%)</title><rect x="373.5" y="485" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="376.50" y="495.5" ></text>
</g>
<g >
<title>net/http.Header.sortedKeyValues (3 samples, 0.14%)</title><rect x="206.2" y="453" width="1.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="209.20" y="463.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (1 samples, 0.05%)</title><rect x="430.2" y="117" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="433.20" y="127.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).Write (29 samples, 1.37%)</title><rect x="191.8" y="501" width="16.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="194.75" y="511.5" ></text>
</g>
<g >
<title>net/url.ParseQuery (1 samples, 0.05%)</title><rect x="400.7" y="277" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="403.74" y="287.5" ></text>
</g>
<g >
<title>internal/abi.(*FuncType).In (1 samples, 0.05%)</title><rect x="829.8" y="245" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="832.83" y="255.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.05%)</title><rect x="859.8" y="149" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="862.84" y="159.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.05%)</title><rect x="391.8" y="133" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="394.85" y="143.5" ></text>
</g>
<g >
<title>runtime.wakep (7 samples, 0.33%)</title><rect x="185.6" y="469" width="3.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="188.64" y="479.5" ></text>
</g>
<g >
<title>runtime.mapdelete (5 samples, 0.24%)</title><rect x="98.9" y="485" width="2.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="101.93" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (5 samples, 0.24%)</title><rect x="617.5" y="309" width="2.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="620.51" y="319.5" ></text>
</g>
<g >
<title>runtime.netpoll (40 samples, 1.88%)</title><rect x="1077.2" y="485" width="22.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1080.17" y="495.5" >r..</text>
</g>
<g >
<title>html/template.attrEscaper (3 samples, 0.14%)</title><rect x="855.4" y="229" width="1.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="858.40" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (4 samples, 0.19%)</title><rect x="577.5" y="357" width="2.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="580.49" y="367.5" ></text>
</g>
<g >
<title>runtime.mapdelete (1 samples, 0.05%)</title><rect x="55.6" y="341" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="58.58" y="351.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.09%)</title><rect x="358.5" y="453" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="361.50" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="131.7" y="405" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="134.72" y="415.5" ></text>
</g>
<g >
<title>runtime.semawakeup (5 samples, 0.24%)</title><rect x="1072.7" y="421" width="2.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1075.72" y="431.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (30 samples, 1.41%)</title><rect x="76.7" y="469" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="79.70" y="479.5" ></text>
</g>
<g >
<title>runtime.pollInfo.closing (1 samples, 0.05%)</title><rect x="1005.5" y="453" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1008.47" y="463.5" ></text>
</g>
<g >
<title>net.(*netFD).dial (45 samples, 2.12%)</title><rect x="42.8" y="437" width="25.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="45.79" y="447.5" >n..</text>
</g>
<g >
<title>net/http.Header.WriteSubset (4 samples, 0.19%)</title><rect x="205.6" y="485" width="2.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="208.65" y="495.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.05%)</title><rect x="754.2" y="389" width="0.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="757.24" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (1 samples, 0.05%)</title><rect x="928.2" y="69" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="931.21" y="79.5" ></text>
</g>
<g >
<title>net.(*conn).Write (2 samples, 0.09%)</title><rect x="593.1" y="277" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="596.05" y="287.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.05%)</title><rect x="564.7" y="229" width="0.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="567.71" y="239.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.05%)</title><rect x="92.8" y="389" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="95.82" y="399.5" ></text>
</g>
<g >
<title>runtime.gostartcall (1 samples, 0.05%)</title><rect x="182.3" y="453" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="185.30" y="463.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (1 samples, 0.05%)</title><rect x="101.7" y="501" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="104.71" y="511.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (1 samples, 0.05%)</title><rect x="67.8" y="421" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="70.80" y="431.5" ></text>
</g>
<g >
<title>text/template.printableValue (3 samples, 0.14%)</title><rect x="969.3" y="325" width="1.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="972.34" y="335.5" ></text>
</g>
<g >
<title>syscall.CancelIoEx (41 samples, 1.93%)</title><rect x="1009.4" y="469" width="22.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1012.36" y="479.5" >s..</text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.09%)</title><rect x="570.8" y="261" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="573.82" y="271.5" ></text>
</g>
<g >
<title>html/template.htmlReplacer (9 samples, 0.42%)</title><rect x="857.6" y="213" width="5.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="860.62" y="223.5" ></text>
</g>
<g >
<title>reflect.ptrTo (7 samples, 0.33%)</title><rect x="954.3" y="261" width="3.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="957.33" y="271.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (1 samples, 0.05%)</title><rect x="1061.1" y="453" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1064.05" y="463.5" ></text>
</g>
<g >
<title>internal/abi.(*Type).Kind (1 samples, 0.05%)</title><rect x="969.9" y="293" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="972.90" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).connect (45 samples, 2.12%)</title><rect x="42.8" y="421" width="25.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="45.79" y="431.5" >n..</text>
</g>
<g >
<title>strings.(*Builder).WriteString (1 samples, 0.05%)</title><rect x="886.5" y="197" width="0.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="889.52" y="207.5" ></text>
</g>
<g >
<title>runtime.spillArgs (3 samples, 0.14%)</title><rect x="931.5" y="229" width="1.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="934.54" y="239.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (8 samples, 0.38%)</title><rect x="1117.2" y="453" width="4.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1120.19" y="463.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (1 samples, 0.05%)</title><rect x="1039.4" y="533" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1042.37" y="543.5" ></text>
</g>
<g >
<title>net.(*Resolver).lookupIP.func1 (56 samples, 2.64%)</title><rect x="10.0" y="533" width="31.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >ne..</text>
</g>
<g >
<title>runtime.readyWithTime.goready.func1 (16 samples, 0.75%)</title><rect x="1179.4" y="533" width="8.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1182.44" y="543.5" ></text>
</g>
<g >
<title>runtime.stealWork (1 samples, 0.05%)</title><rect x="1060.5" y="485" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1063.49" y="495.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="1113.9" y="453" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1116.85" y="463.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popHead (1 samples, 0.05%)</title><rect x="118.9" y="485" width="0.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="121.94" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="144.0" y="485" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="146.95" y="495.5" ></text>
</g>
<g >
<title>net/http.HandlerFunc.ServeHTTP (1,095 samples, 51.58%)</title><rect x="374.6" y="501" width="608.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="377.62" y="511.5" >net/http.HandlerFunc.ServeHTTP</text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="928.2" y="133" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="931.21" y="143.5" ></text>
</g>
<g >
<title>errors.Is (2 samples, 0.09%)</title><rect x="403.0" y="357" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="405.96" y="367.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.05%)</title><rect x="577.5" y="341" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="580.49" y="351.5" ></text>
</g>
<g >
<title>unicode/utf8.AppendRune (9 samples, 0.42%)</title><rect x="766.5" y="421" width="5.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="769.47" y="431.5" ></text>
</g>
<g >
<title>strings.(*Builder).grow (2 samples, 0.09%)</title><rect x="760.9" y="405" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="763.91" y="415.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.05%)</title><rect x="10.0" y="469" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.09%)</title><rect x="669.8" y="229" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="672.76" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.09%)</title><rect x="923.8" y="181" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="926.76" y="191.5" ></text>
</g>
<g >
<title>runtime.cgocall (27 samples, 1.27%)</title><rect x="77.8" y="357" width="15.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="80.81" y="367.5" ></text>
</g>
<g >
<title>syscall.Setsockopt (3 samples, 0.14%)</title><rect x="70.0" y="421" width="1.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="73.03" y="431.5" ></text>
</g>
<g >
<title>text/template.safeCall.func1 (1 samples, 0.05%)</title><rect x="934.9" y="261" width="0.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="937.88" y="271.5" ></text>
</g>
<g >
<title>runtime.bgsweep (7 samples, 0.33%)</title><rect x="1036.0" y="549" width="3.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1039.04" y="559.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.05%)</title><rect x="161.2" y="485" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="164.18" y="495.5" ></text>
</g>
<g >
<title>syscall.WSASend (2 samples, 0.09%)</title><rect x="593.1" y="197" width="1.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="596.05" y="207.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.05%)</title><rect x="1055.5" y="469" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1058.49" y="479.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.05%)</title><rect x="910.4" y="133" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="913.42" y="143.5" ></text>
</g>
<g >
<title>runtime.startm (39 samples, 1.84%)</title><rect x="1138.9" y="485" width="21.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1141.86" y="495.5" >r..</text>
</g>
<g >
<title>strconv.eiselLemire64 (4 samples, 0.19%)</title><rect x="709.8" y="325" width="2.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="712.77" y="335.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.05%)</title><rect x="928.2" y="53" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="931.21" y="63.5" ></text>
</g>
<g >
<title>runtime.heapSetType (19 samples, 0.89%)</title><rect x="672.5" y="309" width="10.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="675.53" y="319.5" ></text>
</g>
<g >
<title>syscall.WSARecv (31 samples, 1.46%)</title><rect x="988.2" y="453" width="17.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="991.24" y="463.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (6 samples, 0.28%)</title><rect x="1107.2" y="421" width="3.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1110.18" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="924.9" y="197" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="927.88" y="207.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.05%)</title><rect x="908.8" y="149" width="0.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="911.76" y="159.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.14%)</title><rect x="859.3" y="197" width="1.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="862.29" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocToCache (1 samples, 0.05%)</title><rect x="923.8" y="69" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="926.76" y="79.5" ></text>
</g>
<g >
<title>time.Until (4 samples, 0.19%)</title><rect x="360.2" y="469" width="2.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="363.16" y="479.5" ></text>
</g>
<g >
<title>fmt.Sprint (24 samples, 1.13%)</title><rect x="868.2" y="181" width="13.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="871.18" y="191.5" ></text>
</g>
<g >
<title>sync/atomic.CompareAndSwapPointer (1 samples, 0.05%)</title><rect x="101.7" y="485" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="104.71" y="495.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.05%)</title><rect x="186.7" y="437" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="189.75" y="447.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.05%)</title><rect x="886.0" y="181" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="888.97" y="191.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.05%)</title><rect x="1059.4" y="501" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1062.38" y="511.5" ></text>
</g>
<g >
<title>syscall.(*LazyProc).Find (1 samples, 0.05%)</title><rect x="415.2" y="101" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="418.19" y="111.5" ></text>
</g>
<g >
<title>net/url.ParseQuery (18 samples, 0.85%)</title><rect x="972.1" y="485" width="10.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="975.12" y="495.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (1 samples, 0.05%)</title><rect x="1188.3" y="437" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1191.33" y="447.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).initAt (1 samples, 0.05%)</title><rect x="567.5" y="133" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="570.48" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.05%)</title><rect x="614.7" y="181" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="617.73" y="191.5" ></text>
</g>
<g >
<title>github.com/lib/pq.parseArray (91 samples, 4.29%)</title><rect x="646.4" y="357" width="50.6" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="649.41" y="367.5" >githu..</text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (10 samples, 0.47%)</title><rect x="1039.9" y="517" width="5.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1042.93" y="527.5" ></text>
</g>
<g >
<title>runtime.cgocall (2 samples, 0.09%)</title><rect x="41.7" y="421" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="44.68" y="431.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (2 samples, 0.09%)</title><rect x="896.0" y="165" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="898.97" y="175.5" ></text>
</g>
<g >
<title>net/http.(*connReader).lock (1 samples, 0.05%)</title><rect x="1032.7" y="533" width="0.6" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1035.70" y="543.5" ></text>
</g>
<g >
<title>reflect.(*rtype).IsVariadic (3 samples, 0.14%)</title><rect x="813.2" y="277" width="1.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="816.16" y="287.5" ></text>
</g>
<g >
<title>database/sql.withLock (309 samples, 14.55%)</title><rect x="405.7" y="357" width="171.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="408.74" y="367.5" >database/sql.withLock</text>
</g>
<g >
<title>net/http.htmlSig.match (2 samples, 0.09%)</title><rect x="195.6" y="453" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="198.64" y="463.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.05%)</title><rect x="357.9" y="357" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="360.94" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.05%)</title><rect x="618.1" y="197" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="621.06" y="207.5" ></text>
</g>
<g >
<title>sync.(*Cond).Wait (5 samples, 0.24%)</title><rect x="362.9" y="501" width="2.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="365.94" y="511.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (5 samples, 0.24%)</title><rect x="1072.7" y="405" width="2.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1075.72" y="415.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).parseComplete (3 samples, 0.14%)</title><rect x="609.2" y="357" width="1.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="612.17" y="367.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*readBuf).string (1 samples, 0.05%)</title><rect x="612.0" y="357" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="614.95" y="367.5" ></text>
</g>
<g >
<title>database/sql.(*DB).QueryContext (362 samples, 17.05%)</title><rect x="378.5" y="437" width="201.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="381.51" y="447.5" >database/sql.(*DB).QueryCo..</text>
</g>
<g >
<title>database/sql.driverArgsConnLocked (5 samples, 0.24%)</title><rect x="574.2" y="325" width="2.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="577.15" y="335.5" ></text>
</g>
<g >
<title>syscall.Syscall (3 samples, 0.14%)</title><rect x="392.4" y="149" width="1.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="395.40" y="159.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.05%)</title><rect x="694.8" y="325" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="697.77" y="335.5" ></text>
</g>
<g >
<title>runtime.wakep (34 samples, 1.60%)</title><rect x="1160.5" y="517" width="18.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1163.54" y="527.5" ></text>
</g>
<g >
<title>reflect.valueInterface (1 samples, 0.05%)</title><rect x="968.8" y="309" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="971.78" y="319.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="694.2" y="325" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="697.21" y="335.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).memoryLimitHeapGoal (1 samples, 0.05%)</title><rect x="391.3" y="101" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="394.29" y="111.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.09%)</title><rect x="1133.9" y="501" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1136.86" y="511.5" ></text>
</g>
<g >
<title>runtime.rand32 (1 samples, 0.05%)</title><rect x="981.6" y="469" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="984.57" y="479.5" ></text>
</g>
<g >
<title>main.(*Application).Search.func1 (1 samples, 0.05%)</title><rect x="776.5" y="421" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="779.47" y="431.5" ></text>
</g>
<g >
<title>reflect.resolveTypeOff (2 samples, 0.09%)</title><rect x="955.4" y="229" width="1.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="958.45" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="791.5" y="357" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="794.48" y="367.5" ></text>
</g>
<g >
<title>syscall.SyscallN (54 samples, 2.54%)</title><rect x="11.1" y="485" width="30.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="14.11" y="495.5" >sy..</text>
</g>
<g >
<title>runtime.cgocall (2 samples, 0.09%)</title><rect x="593.1" y="149" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="596.05" y="159.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.14%)</title><rect x="948.8" y="213" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="951.78" y="223.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).recvMessage (1 samples, 0.05%)</title><rect x="413.0" y="245" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="415.97" y="255.5" ></text>
</g>
<g >
<title>syscall.GetAddrInfoW (54 samples, 2.54%)</title><rect x="11.1" y="517" width="30.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="14.11" y="527.5" >sy..</text>
</g>
<g >
<title>runtime.cgocall (41 samples, 1.93%)</title><rect x="1009.4" y="421" width="22.7" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1012.36" y="431.5" >r..</text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.09%)</title><rect x="962.7" y="229" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="965.67" y="239.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (1 samples, 0.05%)</title><rect x="1137.8" y="453" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1140.75" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="578.0" y="341" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="581.05" y="351.5" ></text>
</g>
<g >
<title>net/http.readTransfer (6 samples, 0.28%)</title><rect x="126.7" y="501" width="3.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="129.72" y="511.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (1 samples, 0.05%)</title><rect x="362.9" y="485" width="0.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="365.94" y="495.5" ></text>
</g>
<g >
<title>memeqbody (16 samples, 0.75%)</title><rect x="633.1" y="341" width="8.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="636.07" y="351.5" ></text>
</g>
<g >
<title>runtime.park_m (134 samples, 6.31%)</title><rect x="1061.6" y="533" width="74.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1064.61" y="543.5" >runtime...</text>
</g>
<g >
<title>runtime.cgocall (54 samples, 2.54%)</title><rect x="11.1" y="469" width="30.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="14.11" y="479.5" >ru..</text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="173.4" y="421" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="176.41" y="431.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (1 samples, 0.05%)</title><rect x="391.3" y="133" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="394.29" y="143.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="779.3" y="421" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="782.25" y="431.5" ></text>
</g>
<g >
<title>internal/abi.(*IntArgRegBitmap).Get (1 samples, 0.05%)</title><rect x="853.7" y="213" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="856.73" y="223.5" ></text>
</g>
<g >
<title>runtime.efaceeq (1 samples, 0.05%)</title><rect x="108.9" y="453" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="111.94" y="463.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*rows).HasNextResultSet (1 samples, 0.05%)</title><rect x="606.9" y="373" width="0.6" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="609.95" y="383.5" ></text>
</g>
<g >
<title>syscall.WSARecv (27 samples, 1.27%)</title><rect x="77.8" y="405" width="15.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="80.81" y="415.5" ></text>
</g>
<g >
<title>net.(*netFD).setAddr (1 samples, 0.05%)</title><rect x="67.8" y="437" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="70.80" y="447.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="1032.1" y="485" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1035.15" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.Index (2 samples, 0.09%)</title><rect x="787.0" y="389" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="790.03" y="399.5" ></text>
</g>
<g >
<title>net.setNoDelay (2 samples, 0.09%)</title><rect x="71.7" y="453" width="1.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="74.70" y="463.5" ></text>
</g>
<g >
<title>syscall.SetsockoptInt (3 samples, 0.14%)</title><rect x="70.0" y="437" width="1.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="73.03" y="447.5" ></text>
</g>
<g >
<title>runtime.systemstack (29 samples, 1.37%)</title><rect x="1039.9" y="533" width="16.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1042.93" y="543.5" ></text>
</g>
<g >
<title>runtime.efaceeq (3 samples, 0.14%)</title><rect x="917.1" y="165" width="1.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="920.09" y="175.5" ></text>
</g>
<g >
<title>runtime.heapSetType (2 samples, 0.09%)</title><rect x="750.9" y="421" width="1.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="753.90" y="431.5" ></text>
</g>
<g >
<title>runtime.preemptall (1 samples, 0.05%)</title><rect x="1137.8" y="501" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1140.75" y="511.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).done (2 samples, 0.09%)</title><rect x="1067.7" y="485" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1070.72" y="495.5" ></text>
</g>
<g >
<title>runtime.wbMove (1 samples, 0.05%)</title><rect x="792.0" y="373" width="0.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="795.03" y="383.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="144.5" y="485" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="147.51" y="495.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.05%)</title><rect x="129.5" y="485" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="132.50" y="495.5" ></text>
</g>
<g >
<title>net/http.(*connReader).lock (1 samples, 0.05%)</title><rect x="362.4" y="501" width="0.5" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="365.39" y="511.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.05%)</title><rect x="397.4" y="245" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="400.40" y="255.5" ></text>
</g>
<g >
<title>sync.runtime_notifyListWait (4 samples, 0.19%)</title><rect x="363.5" y="485" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="366.50" y="495.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.05%)</title><rect x="1188.3" y="469" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.33" y="479.5" ></text>
</g>
<g >
<title>runtime.runqgrab.osyield.func1 (6 samples, 0.28%)</title><rect x="1107.2" y="437" width="3.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1110.18" y="447.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteRune (3 samples, 0.14%)</title><rect x="764.8" y="421" width="1.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="767.80" y="431.5" ></text>
</g>
<g >
<title>net.(*Dialer).DialContext (5 samples, 0.24%)</title><rect x="398.0" y="261" width="2.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="400.96" y="271.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.09%)</title><rect x="1076.1" y="485" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1079.06" y="495.5" ></text>
</g>
<g >
<title>strings.indexFunc (2 samples, 0.09%)</title><rect x="141.2" y="501" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="144.17" y="511.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.05%)</title><rect x="103.4" y="517" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="106.38" y="527.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.09%)</title><rect x="391.3" y="181" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="394.29" y="191.5" ></text>
</g>
<g >
<title>database/sql.(*driverConn).Close (13 samples, 0.61%)</title><rect x="586.9" y="357" width="7.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="589.94" y="367.5" ></text>
</g>
<g >
<title>net.acquireThread (1 samples, 0.05%)</title><rect x="10.0" y="517" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>text/template.goodFunc (1 samples, 0.05%)</title><rect x="825.4" y="277" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="828.38" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (39 samples, 1.84%)</title><rect x="1138.9" y="469" width="21.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1141.86" y="479.5" >r..</text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.05%)</title><rect x="1054.9" y="469" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1057.94" y="479.5" ></text>
</g>
<g >
<title>runtime.pidleput (2 samples, 0.09%)</title><rect x="1102.7" y="485" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1105.74" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (20 samples, 0.94%)</title><rect x="179.0" y="501" width="11.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="181.97" y="511.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="197.3" y="437" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="200.31" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.09%)</title><rect x="856.0" y="197" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="858.95" y="207.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.05%)</title><rect x="670.3" y="165" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="673.31" y="175.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).readLineSlice (1 samples, 0.05%)</title><rect x="150.1" y="469" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="153.07" y="479.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="1188.3" y="453" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.33" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (6 samples, 0.28%)</title><rect x="668.6" y="309" width="3.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="671.64" y="319.5" ></text>
</g>
<g >
<title>syscall.SyscallN (31 samples, 1.46%)</title><rect x="988.2" y="421" width="17.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="991.24" y="431.5" ></text>
</g>
<g >
<title>runtime.semawakeup (16 samples, 0.75%)</title><rect x="1179.4" y="453" width="8.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1182.44" y="463.5" ></text>
</g>
<g >
<title>reflect.packEface (9 samples, 0.42%)</title><rect x="906.5" y="181" width="5.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="909.53" y="191.5" ></text>
</g>
<g >
<title>runtime.typehash (1 samples, 0.05%)</title><rect x="919.3" y="165" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="922.32" y="175.5" ></text>
</g>
<g >
<title>runtime.cgocall (251 samples, 11.82%)</title><rect x="210.1" y="357" width="139.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="213.09" y="367.5" >runtime.cgocall</text>
</g>
<g >
<title>sync.(*Cond).Broadcast (4 samples, 0.19%)</title><rect x="1033.3" y="533" width="2.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1036.26" y="543.5" ></text>
</g>
<g >
<title>main.(*Application).SearchHandler (1,075 samples, 50.64%)</title><rect x="374.6" y="485" width="597.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="377.62" y="495.5" >main.(*Application).SearchHandler</text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.05%)</title><rect x="567.5" y="117" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="570.48" y="127.5" ></text>
</g>
<g >
<title>reflect.implements (1 samples, 0.05%)</title><rect x="824.3" y="245" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="827.27" y="255.5" ></text>
</g>
<g >
<title>runtime.(*bmap).keys (1 samples, 0.05%)</title><rect x="155.1" y="469" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="158.07" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.05%)</title><rect x="618.1" y="181" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="621.06" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.09%)</title><rect x="138.4" y="389" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="141.39" y="399.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (2 samples, 0.09%)</title><rect x="1188.9" y="533" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1191.89" y="543.5" ></text>
</g>
<g >
<title>terch/utils.CosineSim (3 samples, 0.14%)</title><rect x="773.1" y="453" width="1.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="776.14" y="463.5" ></text>
</g>
<g >
<title>reflect.MakeSlice (24 samples, 1.13%)</title><rect x="887.6" y="229" width="13.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="890.64" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="614.7" y="229" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="617.73" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (8 samples, 0.38%)</title><rect x="926.5" y="229" width="4.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="929.54" y="239.5" ></text>
</g>
<g >
<title>syscall.Setsockopt (2 samples, 0.09%)</title><rect x="71.7" y="421" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="74.70" y="431.5" ></text>
</g>
<g >
<title>runtime.heapBitsSlice (1 samples, 0.05%)</title><rect x="746.5" y="373" width="0.5" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="749.46" y="383.5" ></text>
</g>
<g >
<title>runtime.scanobject (10 samples, 0.47%)</title><rect x="1039.9" y="485" width="5.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1042.93" y="495.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.05%)</title><rect x="964.9" y="277" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="967.89" y="287.5" ></text>
</g>
<g >
<title>text/template.isMissing (5 samples, 0.24%)</title><rect x="825.9" y="277" width="2.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="828.94" y="287.5" ></text>
</g>
<g >
<title>memeqbody (2 samples, 0.09%)</title><rect x="369.6" y="421" width="1.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="372.61" y="431.5" ></text>
</g>
<g >
<title>text/template.(*state).walkRange.func1 (1 samples, 0.05%)</title><rect x="792.6" y="389" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="795.59" y="399.5" ></text>
</g>
<g >
<title>net/http.(*response).write (7 samples, 0.33%)</title><rect x="795.9" y="325" width="3.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="798.93" y="335.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.05%)</title><rect x="1136.1" y="501" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1139.09" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="745.9" y="405" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="748.90" y="415.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.05%)</title><rect x="1033.8" y="485" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1036.82" y="495.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*writeBuf).string (2 samples, 0.09%)</title><rect x="570.8" y="277" width="1.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="573.82" y="287.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (1 samples, 0.05%)</title><rect x="697.5" y="341" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="700.55" y="351.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.09%)</title><rect x="144.0" y="501" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="146.95" y="511.5" ></text>
</g>
<g >
<title>reflect.(*rtype).common (1 samples, 0.05%)</title><rect x="887.1" y="213" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="890.08" y="223.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.05%)</title><rect x="859.8" y="165" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="862.84" y="175.5" ></text>
</g>
<g >
<title>runtime.unpackScavChunkData (1 samples, 0.05%)</title><rect x="923.8" y="53" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="926.76" y="63.5" ></text>
</g>
<g >
<title>strings.Cut (1 samples, 0.05%)</title><rect x="124.5" y="485" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="127.50" y="495.5" ></text>
</g>
<g >
<title>reflect.(*rtype).AssignableTo (7 samples, 0.33%)</title><rect x="820.9" y="261" width="3.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="823.94" y="271.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.05%)</title><rect x="1057.2" y="453" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1060.16" y="463.5" ></text>
</g>
<g >
<title>runtime.convTslice (1 samples, 0.05%)</title><rect x="774.8" y="469" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="777.80" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="618.1" y="213" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="621.06" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.09%)</title><rect x="173.4" y="469" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="176.41" y="479.5" ></text>
</g>
<g >
<title>context.parentCancelCtx (4 samples, 0.19%)</title><rect x="96.2" y="485" width="2.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="99.15" y="495.5" ></text>
</g>
<g >
<title>runtime.funcname (1 samples, 0.05%)</title><rect x="1057.2" y="501" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1060.16" y="511.5" ></text>
</g>
<g >
<title>runtime.notewakeup (16 samples, 0.75%)</title><rect x="1179.4" y="469" width="8.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1182.44" y="479.5" ></text>
</g>
<g >
<title>syscall.SyscallN (3 samples, 0.14%)</title><rect x="392.4" y="133" width="1.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="395.40" y="143.5" ></text>
</g>
<g >
<title>fmt.(*pp).free (2 samples, 0.09%)</title><rect x="877.6" y="165" width="1.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="880.63" y="175.5" ></text>
</g>
<g >
<title>net/textproto.validHeaderValueByte (2 samples, 0.09%)</title><rect x="167.9" y="501" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="170.85" y="511.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Del (3 samples, 0.14%)</title><rect x="127.8" y="485" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="130.83" y="495.5" ></text>
</g>
<g >
<title>internal/reflectlite.rtype.Comparable (2 samples, 0.09%)</title><rect x="403.0" y="341" width="1.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="405.96" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.05%)</title><rect x="928.2" y="101" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="931.21" y="111.5" ></text>
</g>
<g >
<title>reflect.directlyAssignable (1 samples, 0.05%)</title><rect x="912.6" y="213" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="915.65" y="223.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Value (1 samples, 0.05%)</title><rect x="108.9" y="469" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="111.94" y="479.5" ></text>
</g>
<g >
<title>runtime.findObject (3 samples, 0.14%)</title><rect x="1053.3" y="469" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1056.27" y="479.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.05%)</title><rect x="356.8" y="389" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="359.83" y="399.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).closeDot (1 samples, 0.05%)</title><rect x="149.5" y="469" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="152.51" y="479.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (1 samples, 0.05%)</title><rect x="400.7" y="213" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="403.74" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (4 samples, 0.19%)</title><rect x="106.7" y="501" width="2.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="109.71" y="511.5" ></text>
</g>
<g >
<title>sync.runtime_procPin (1 samples, 0.05%)</title><rect x="879.9" y="117" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="882.85" y="127.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (2 samples, 0.09%)</title><rect x="827.6" y="261" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="830.61" y="271.5" ></text>
</g>
<g >
<title>runtime.(*limiterEvent).stop (1 samples, 0.05%)</title><rect x="188.4" y="421" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="191.42" y="431.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtInteger (11 samples, 0.52%)</title><rect x="871.5" y="133" width="6.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="874.52" y="143.5" ></text>
</g>
<g >
<title>bufio.(*Writer).WriteString (1 samples, 0.05%)</title><rect x="197.3" y="453" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="200.31" y="463.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.05%)</title><rect x="102.3" y="501" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="105.27" y="511.5" ></text>
</g>
<g >
<title>reflect.Value.Elem (3 samples, 0.14%)</title><rect x="743.1" y="405" width="1.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="746.12" y="415.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.05%)</title><rect x="159.0" y="453" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="161.96" y="463.5" ></text>
</g>
<g >
<title>syscall.SyscallN (2 samples, 0.09%)</title><rect x="41.7" y="437" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="44.68" y="447.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (1 samples, 0.05%)</title><rect x="1035.5" y="517" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1038.48" y="527.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.05%)</title><rect x="366.3" y="501" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="369.28" y="511.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.05%)</title><rect x="614.7" y="149" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="617.73" y="159.5" ></text>
</g>
<g >
<title>reflect.(*structType).Field (8 samples, 0.38%)</title><rect x="946.0" y="229" width="4.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="949.00" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.09%)</title><rect x="575.8" y="309" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="578.82" y="319.5" ></text>
</g>
<g >
<title>strings.(*Builder).Grow (1 samples, 0.05%)</title><rect x="977.1" y="437" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="980.12" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.05%)</title><rect x="1036.6" y="517" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1039.59" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="697.0" y="341" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="699.99" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (30 samples, 1.41%)</title><rect x="76.7" y="453" width="16.7" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="79.70" y="463.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).simpleQuery (247 samples, 11.63%)</title><rect x="433.5" y="277" width="137.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="436.53" y="287.5" >github.com/lib/pq..</text>
</g>
<g >
<title>runtime.findObject (5 samples, 0.24%)</title><rect x="1042.2" y="469" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1045.15" y="479.5" ></text>
</g>
<g >
<title>runtime.roundupsize (1 samples, 0.05%)</title><rect x="749.2" y="437" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="752.24" y="447.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (4 samples, 0.19%)</title><rect x="797.6" y="309" width="2.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="800.59" y="319.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).ResetSession (1 samples, 0.05%)</title><rect x="389.1" y="341" width="0.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="392.07" y="351.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (39 samples, 1.84%)</title><rect x="1138.9" y="437" width="21.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1141.86" y="447.5" >r..</text>
</g>
<g >
<title>runtime.nextFreeFast (11 samples, 0.52%)</title><rect x="686.4" y="325" width="6.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="689.43" y="335.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (81 samples, 3.82%)</title><rect x="987.1" y="517" width="45.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="990.13" y="527.5" >net...</text>
</g>
<g >
<title>syscall.Environ (1 samples, 0.05%)</title><rect x="402.4" y="293" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="405.41" y="303.5" ></text>
</g>
<g >
<title>net/textproto.mustHaveFieldNameColon (1 samples, 0.05%)</title><rect x="150.6" y="469" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="153.62" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.05%)</title><rect x="928.2" y="85" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="931.21" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.05%)</title><rect x="583.0" y="357" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="586.05" y="367.5" ></text>
</g>
<g >
<title>database/sql.(*DB).query (357 samples, 16.82%)</title><rect x="381.3" y="389" width="198.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="384.29" y="399.5" >database/sql.(*DB).query</text>
</g>
<g >
<title>runtime.mallocgc (32 samples, 1.51%)</title><rect x="667.5" y="325" width="17.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="670.53" y="335.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="768.7" y="389" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="771.69" y="399.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadLine (2 samples, 0.09%)</title><rect x="142.8" y="485" width="1.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="145.84" y="495.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="167.3" y="469" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="170.30" y="479.5" ></text>
</g>
<g >
<title>runtime.findfunc (3 samples, 0.14%)</title><rect x="184.0" y="437" width="1.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="186.97" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="614.7" y="261" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="617.73" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.09%)</title><rect x="138.4" y="469" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="141.39" y="479.5" ></text>
</g>
<g >
<title>net/http.shouldClose (1 samples, 0.05%)</title><rect x="130.1" y="501" width="0.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="133.06" y="511.5" ></text>
</g>
<g >
<title>strings.IndexByte (1 samples, 0.05%)</title><rect x="135.1" y="453" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="138.06" y="463.5" ></text>
</g>
<g >
<title>internal/poll.execIO (252 samples, 11.87%)</title><rect x="209.5" y="437" width="140.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="212.54" y="447.5" >internal/poll.exe..</text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="923.8" y="149" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="926.76" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.05%)</title><rect x="1061.1" y="501" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1064.05" y="511.5" ></text>
</g>
<g >
<title>runtime.preemptM (1 samples, 0.05%)</title><rect x="1137.2" y="453" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1140.20" y="463.5" ></text>
</g>
<g >
<title>runtime.memclrHasPointers (1 samples, 0.05%)</title><rect x="100.6" y="469" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="103.60" y="479.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumIn (1 samples, 0.05%)</title><rect x="814.8" y="277" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="817.82" y="287.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.05%)</title><rect x="1113.9" y="469" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1116.85" y="479.5" ></text>
</g>
<g >
<title>net/http.(*response).finishRequest (318 samples, 14.98%)</title><rect x="190.1" y="533" width="176.7" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="193.08" y="543.5" >net/http.(*response).f..</text>
</g>
<g >
<title>bufio.(*Writer).Write (1 samples, 0.05%)</title><rect x="192.3" y="485" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="195.31" y="495.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).nextLocked (36 samples, 1.70%)</title><rect x="603.1" y="389" width="20.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="606.06" y="399.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="391.8" y="101" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="394.85" y="111.5" ></text>
</g>
<g >
<title>runtime.duffzero (3 samples, 0.14%)</title><rect x="913.2" y="213" width="1.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="916.20" y="223.5" ></text>
</g>
<g >
<title>html/template.processURLOnto (4 samples, 0.19%)</title><rect x="865.4" y="197" width="2.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="868.40" y="207.5" ></text>
</g>
<g >
<title>runtime.duffcopy (3 samples, 0.14%)</title><rect x="950.4" y="229" width="1.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="953.44" y="239.5" ></text>
</g>
<g >
<title>runtime.procPin (1 samples, 0.05%)</title><rect x="879.3" y="117" width="0.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="882.30" y="127.5" ></text>
</g>
<g >
<title>syscall.(*LazyProc).Find (1 samples, 0.05%)</title><rect x="77.3" y="389" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="80.25" y="399.5" ></text>
</g>
<g >
<title>syscall.(*LazyProc).Find (2 samples, 0.09%)</title><rect x="439.6" y="149" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="442.65" y="159.5" ></text>
</g>
<g >
<title>runtime.makechan (1 samples, 0.05%)</title><rect x="400.2" y="213" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="403.18" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="391.3" y="165" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="394.29" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (20 samples, 0.94%)</title><rect x="1122.2" y="453" width="11.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1125.19" y="463.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.05%)</title><rect x="755.9" y="437" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="758.91" y="447.5" ></text>
</g>
<g >
<title>runtime.roundupsize (3 samples, 0.14%)</title><rect x="695.3" y="341" width="1.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="698.32" y="351.5" ></text>
</g>
<g >
<title>strings.Cut (1 samples, 0.05%)</title><rect x="981.0" y="453" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="984.01" y="463.5" ></text>
</g>
<g >
<title>net/http.checkConnErrorWriter.Write (256 samples, 12.06%)</title><rect x="207.9" y="501" width="142.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="210.87" y="511.5" >net/http.checkConn..</text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="929.9" y="213" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="932.88" y="223.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (230 samples, 10.83%)</title><rect x="436.9" y="229" width="127.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="439.87" y="239.5" >net.(*netFD).Write</text>
</g>
<g >
<title>runtime.resolveTypeOff (3 samples, 0.14%)</title><rect x="956.6" y="213" width="1.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="959.56" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (34 samples, 1.60%)</title><rect x="1160.5" y="469" width="18.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1163.54" y="479.5" ></text>
</g>
<g >
<title>time.Time.abs (2 samples, 0.09%)</title><rect x="201.2" y="437" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="204.20" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="767.6" y="389" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="770.58" y="399.5" ></text>
</g>
<g >
<title>reflect.unsafe_NewArray (14 samples, 0.66%)</title><rect x="889.9" y="213" width="7.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="892.86" y="223.5" ></text>
</g>
<g >
<title>unicode.IsLetter (3 samples, 0.14%)</title><rect x="771.5" y="437" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="774.47" y="447.5" ></text>
</g>
<g >
<title>runtime.memequal128 (1 samples, 0.05%)</title><rect x="918.2" y="149" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="921.21" y="159.5" ></text>
</g>
<g >
<title>syscall.WSASend (251 samples, 11.82%)</title><rect x="210.1" y="405" width="139.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="213.09" y="415.5" >syscall.WSASend</text>
</g>
<g >
<title>internal/poll.(*FD).Read (29 samples, 1.37%)</title><rect x="415.2" y="165" width="16.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="418.19" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="923.8" y="117" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="926.76" y="127.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).query (288 samples, 13.57%)</title><rect x="411.9" y="293" width="160.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="414.86" y="303.5" >github.com/lib/pq.(*..</text>
</g>
<g >
<title>syscall.CloseHandle (3 samples, 0.14%)</title><rect x="392.4" y="165" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="395.40" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="757.6" y="421" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="760.57" y="431.5" ></text>
</g>
<g >
<title>runtime.injectglist (6 samples, 0.28%)</title><rect x="1072.7" y="485" width="3.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1075.72" y="495.5" ></text>
</g>
<g >
<title>syscall.ReadFile (2 samples, 0.09%)</title><rect x="395.2" y="165" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="398.18" y="175.5" ></text>
</g>
<g >
<title>net/url.stringContainsCTLByte (1 samples, 0.05%)</title><rect x="135.6" y="485" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="138.61" y="495.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="169.5" y="485" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="172.52" y="495.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.05%)</title><rect x="1113.9" y="485" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1116.85" y="495.5" ></text>
</g>
<g >
<title>reflect.(*rtype).AssignableTo (1 samples, 0.05%)</title><rect x="887.1" y="229" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="890.08" y="239.5" ></text>
</g>
<g >
<title>text/template.(*state).evalCall (231 samples, 10.88%)</title><rect x="807.0" y="293" width="128.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="810.04" y="303.5" >text/template.(*..</text>
</g>
<g >
<title>runtime.lock2 (12 samples, 0.57%)</title><rect x="1115.0" y="485" width="6.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1117.96" y="495.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.05%)</title><rect x="91.7" y="341" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="94.71" y="351.5" ></text>
</g>
<g >
<title>runtime.cgocall (2 samples, 0.09%)</title><rect x="395.2" y="101" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="398.18" y="111.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.05%)</title><rect x="817.6" y="245" width="0.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="820.60" y="255.5" ></text>
</g>
<g >
<title>runtime.chansend1 (1 samples, 0.05%)</title><rect x="10.0" y="501" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>net/http.newTextprotoReader (4 samples, 0.19%)</title><rect x="121.7" y="501" width="2.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="124.72" y="511.5" ></text>
</g>
<g >
<title>sync.runtime_notifyListNotifyAll (2 samples, 0.09%)</title><rect x="1034.4" y="517" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1037.37" y="527.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="911.0" y="149" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="913.98" y="159.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (3 samples, 0.14%)</title><rect x="878.7" y="149" width="1.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="881.74" y="159.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (1 samples, 0.05%)</title><rect x="196.8" y="453" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="199.75" y="463.5" ></text>
</g>
<g >
<title>runtime.growslice (48 samples, 2.26%)</title><rect x="665.9" y="341" width="26.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="668.86" y="351.5" >r..</text>
</g>
<g >
<title>runtime.deductAssistCredit (1 samples, 0.05%)</title><rect x="144.0" y="469" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="146.95" y="479.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (1 samples, 0.05%)</title><rect x="1075.5" y="421" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1078.50" y="431.5" ></text>
</g>
<g >
<title>net.sysSocket (3 samples, 0.14%)</title><rect x="68.4" y="437" width="1.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="71.36" y="447.5" ></text>
</g>
<g >
<title>github.com/lib/pq.dial (5 samples, 0.24%)</title><rect x="398.0" y="293" width="2.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="400.96" y="303.5" ></text>
</g>
<g >
<title>net.(*conn).Read (30 samples, 1.41%)</title><rect x="415.2" y="197" width="16.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="418.19" y="207.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (2 samples, 0.09%)</title><rect x="1031.0" y="389" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1034.04" y="399.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.05%)</title><rect x="560.8" y="69" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="563.81" y="79.5" ></text>
</g>
<g >
<title>runtime.netpollgoready.goready.func1 (40 samples, 1.88%)</title><rect x="1138.3" y="533" width="22.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1141.31" y="543.5" >r..</text>
</g>
<g >
<title>net/http.(*connReader).Read (31 samples, 1.46%)</title><rect x="76.1" y="501" width="17.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="79.14" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (1 samples, 0.05%)</title><rect x="1037.2" y="517" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1040.15" y="527.5" ></text>
</g>
<g >
<title>net.(*conn).Write (230 samples, 10.83%)</title><rect x="436.9" y="245" width="127.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="439.87" y="255.5" >net.(*conn).Write</text>
</g>
<g >
<title>runtime.memmove (3 samples, 0.14%)</title><rect x="431.9" y="197" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="434.87" y="207.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (54 samples, 2.54%)</title><rect x="11.1" y="501" width="30.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="14.11" y="511.5" >sy..</text>
</g>
<g >
<title>net/http.(*ServeMux).findHandler (10 samples, 0.47%)</title><rect x="369.1" y="501" width="5.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="372.06" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="750.9" y="437" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="753.90" y="447.5" ></text>
</g>
<g >
<title>syscall.SyscallN (20 samples, 0.94%)</title><rect x="56.1" y="357" width="11.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="59.13" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="169.5" y="501" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="172.52" y="511.5" ></text>
</g>
<g >
<title>database/sql.(*DB).putConn (23 samples, 1.08%)</title><rect x="584.7" y="373" width="12.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="587.72" y="383.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.05%)</title><rect x="188.4" y="437" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="191.42" y="447.5" ></text>
</g>
<g >
<title>net/url.(*URL).setPath (1 samples, 0.05%)</title><rect x="131.2" y="469" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="134.17" y="479.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.05%)</title><rect x="181.2" y="405" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="184.19" y="415.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (4 samples, 0.19%)</title><rect x="923.2" y="229" width="2.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="926.21" y="239.5" ></text>
</g>
<g >
<title>internal/abi.(*FuncType).InSlice (1 samples, 0.05%)</title><rect x="830.4" y="245" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="833.39" y="255.5" ></text>
</g>
<g >
<title>encoding/binary.bigEndian.Uint32 (1 samples, 0.05%)</title><rect x="434.6" y="261" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="437.64" y="271.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.09%)</title><rect x="357.4" y="389" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="360.39" y="399.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.05%)</title><rect x="389.6" y="261" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="392.62" y="271.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (14 samples, 0.66%)</title><rect x="869.8" y="149" width="7.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="872.85" y="159.5" ></text>
</g>
<g >
<title>reflect.implements (1 samples, 0.05%)</title><rect x="970.5" y="293" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="973.45" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (81 samples, 3.82%)</title><rect x="987.1" y="501" width="45.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="990.13" y="511.5" >inte..</text>
</g>
<g >
<title>time.loadTzinfoFromZip (12 samples, 0.57%)</title><rect x="390.7" y="197" width="6.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="393.73" y="207.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*readBuf).int32 (1 samples, 0.05%)</title><rect x="605.8" y="373" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="608.84" y="383.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.05%)</title><rect x="611.4" y="325" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="614.39" y="335.5" ></text>
</g>
<g >
<title>net.(*Resolver).lookupIPAddr (4 samples, 0.19%)</title><rect x="398.0" y="213" width="2.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="400.96" y="223.5" ></text>
</g>
<g >
<title>syscall.readFile (2 samples, 0.09%)</title><rect x="395.2" y="149" width="1.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="398.18" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="131.7" y="421" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="134.72" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="622.0" y="277" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="624.95" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="885.4" y="165" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="888.41" y="175.5" ></text>
</g>
<g >
<title>text/template.(*state).evalFunction (237 samples, 11.16%)</title><rect x="807.0" y="309" width="131.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="810.04" y="319.5" >text/template.(*..</text>
</g>
<g >
<title>runtime.(*sweepClass).load (1 samples, 0.05%)</title><rect x="1037.7" y="517" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1040.71" y="527.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.09%)</title><rect x="1033.3" y="517" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1036.26" y="527.5" ></text>
</g>
<g >
<title>github.com/lib/pq.ssl (1 samples, 0.05%)</title><rect x="389.6" y="277" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="392.62" y="287.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Elem (1 samples, 0.05%)</title><rect x="830.9" y="245" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="833.94" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="618.1" y="277" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="621.06" y="287.5" ></text>
</g>
<g >
<title>html/template.indirectToStringerOrError (2 samples, 0.09%)</title><rect x="882.6" y="181" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="885.63" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrain (19 samples, 0.89%)</title><rect x="1045.5" y="501" width="10.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1048.49" y="511.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (1 samples, 0.05%)</title><rect x="578.0" y="309" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="581.05" y="319.5" ></text>
</g>
<g >
<title>syscall.SyscallN (220 samples, 10.36%)</title><rect x="441.3" y="133" width="122.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="444.31" y="143.5" >syscall.SyscallN</text>
</g>
<g >
<title>internal/poll.(*FD).Write (254 samples, 11.96%)</title><rect x="208.4" y="453" width="141.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="211.43" y="463.5" >internal/poll.(*F..</text>
</g>
<g >
<title>runtime.gcTrigger.test (1 samples, 0.05%)</title><rect x="391.3" y="149" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="394.29" y="159.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*rows).Next (28 samples, 1.32%)</title><rect x="607.5" y="373" width="15.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="610.50" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="398.5" y="165" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="401.52" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.05%)</title><rect x="817.6" y="229" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="820.60" y="239.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (2 samples, 0.09%)</title><rect x="1068.8" y="485" width="1.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1071.83" y="495.5" ></text>
</g>
<g >
<title>runtime.selectgo (2 samples, 0.09%)</title><rect x="399.1" y="197" width="1.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="402.07" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="928.2" y="197" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="931.21" y="207.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (20 samples, 0.94%)</title><rect x="179.0" y="485" width="11.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="181.97" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.assignTo (3 samples, 0.14%)</title><rect x="911.5" y="229" width="1.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="914.54" y="239.5" ></text>
</g>
<g >
<title>gonum.org/v1/gonum/floats.Norm (3 samples, 0.14%)</title><rect x="773.1" y="437" width="1.7" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="776.14" y="447.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (3 samples, 0.14%)</title><rect x="364.1" y="469" width="1.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="367.06" y="479.5" ></text>
</g>
<g >
<title>fmt.(*buffer).write (3 samples, 0.14%)</title><rect x="876.0" y="101" width="1.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="878.96" y="111.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="790.9" y="357" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="793.92" y="367.5" ></text>
</g>
<g >
<title>net.getSystemDNSConfig (3 samples, 0.14%)</title><rect x="41.1" y="533" width="1.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="44.13" y="543.5" ></text>
</g>
<g >
<title>runtime.makeslice (5 samples, 0.24%)</title><rect x="692.5" y="341" width="2.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="695.54" y="351.5" ></text>
</g>
<g >
<title>strconv.AppendInt (1 samples, 0.05%)</title><rect x="197.9" y="453" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="200.87" y="463.5" ></text>
</g>
<g >
<title>reflect.Value.Call (189 samples, 8.90%)</title><rect x="829.8" y="261" width="105.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="832.83" y="271.5" >reflect.Valu..</text>
</g>
<g >
<title>runtime.pMask.set (1 samples, 0.05%)</title><rect x="398.5" y="101" width="0.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="401.52" y="111.5" ></text>
</g>
<g >
<title>time.loadLocation (13 samples, 0.61%)</title><rect x="390.2" y="245" width="7.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="393.18" y="255.5" ></text>
</g>
<g >
<title>text/template.(*state).at (1 samples, 0.05%)</title><rect x="800.4" y="341" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="803.37" y="351.5" ></text>
</g>
<g >
<title>net.dnsReadConfig (2 samples, 0.09%)</title><rect x="41.7" y="501" width="1.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="44.68" y="511.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="197.9" y="421" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="200.87" y="431.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (2 samples, 0.09%)</title><rect x="1031.0" y="405" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1034.04" y="415.5" ></text>
</g>
<g >
<title>internal/singleflight.(*Group).DoChan (1 samples, 0.05%)</title><rect x="398.5" y="197" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="401.52" y="207.5" ></text>
</g>
<g >
<title>internal/abi.(*FuncType).IsVariadic (2 samples, 0.09%)</title><rect x="809.3" y="277" width="1.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="812.27" y="287.5" ></text>
</g>
<g >
<title>internal/poll.execIO (29 samples, 1.37%)</title><rect x="415.2" y="149" width="16.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="418.19" y="159.5" ></text>
</g>
<g >
<title>net/http.(*ServeMux).matchOrRedirect (5 samples, 0.24%)</title><rect x="369.1" y="485" width="2.7" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="372.06" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.14%)</title><rect x="581.9" y="389" width="1.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="584.94" y="399.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.05%)</title><rect x="824.8" y="261" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="827.83" y="271.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (2 samples, 0.09%)</title><rect x="347.4" y="325" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="350.38" y="335.5" ></text>
</g>
<g >
<title>syscall.SyscallN (3 samples, 0.14%)</title><rect x="70.0" y="389" width="1.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="73.03" y="399.5" ></text>
</g>
<g >
<title>runtime.cgocall (2 samples, 0.09%)</title><rect x="394.1" y="101" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="397.07" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.05%)</title><rect x="165.1" y="421" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="168.07" y="431.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).lasterrOrErrLocked (2 samples, 0.09%)</title><rect x="600.8" y="405" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="603.83" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="745.9" y="389" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="748.90" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="697.0" y="325" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="699.99" y="335.5" ></text>
</g>
<g >
<title>reflect.implements (1 samples, 0.05%)</title><rect x="883.2" y="149" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="886.19" y="159.5" ></text>
</g>
<g >
<title>slices.insertionSortCmpFunc[go.shape.struct (2 samples, 0.09%)</title><rect x="775.9" y="437" width="1.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="778.92" y="447.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.05%)</title><rect x="897.1" y="181" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="900.08" y="191.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.05%)</title><rect x="128.9" y="453" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="131.94" y="463.5" ></text>
</g>
<g >
<title>reflect.(*rtype).MethodByName (1 samples, 0.05%)</title><rect x="953.8" y="245" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="956.78" y="255.5" ></text>
</g>
<g >
<title>text/template.(*state).evalCommand (2 samples, 0.09%)</title><rect x="789.8" y="373" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="792.81" y="383.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.05%)</title><rect x="919.3" y="149" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="922.32" y="159.5" ></text>
</g>
<g >
<title>runtime.ready (40 samples, 1.88%)</title><rect x="1138.3" y="517" width="22.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1141.31" y="527.5" >r..</text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.05%)</title><rect x="189.0" y="453" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="191.97" y="463.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadLine (5 samples, 0.24%)</title><rect x="142.3" y="517" width="2.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="145.28" y="527.5" ></text>
</g>
<g >
<title>net/http.(*Request).isH2Upgrade (1 samples, 0.05%)</title><rect x="102.8" y="533" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="105.82" y="543.5" ></text>
</g>
<g >
<title>runtime.gostringnocopy (2 samples, 0.09%)</title><rect x="180.6" y="437" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="183.64" y="447.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Implements (2 samples, 0.09%)</title><rect x="882.6" y="165" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="885.63" y="175.5" ></text>
</g>
<g >
<title>syscall.WSASend (221 samples, 10.41%)</title><rect x="440.8" y="165" width="122.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="443.76" y="175.5" >syscall.WSASend</text>
</g>
<g >
<title>runtime.preemptM (1 samples, 0.05%)</title><rect x="1137.8" y="469" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1140.75" y="479.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (1 samples, 0.05%)</title><rect x="429.6" y="37" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="432.64" y="47.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.05%)</title><rect x="671.4" y="261" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="674.42" y="271.5" ></text>
</g>
<g >
<title>net/http.newBufioWriterSize (5 samples, 0.24%)</title><rect x="116.7" y="517" width="2.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="119.72" y="527.5" ></text>
</g>
<g >
<title>runtime.execute (3 samples, 0.14%)</title><rect x="1063.3" y="501" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1066.27" y="511.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Reset (2 samples, 0.09%)</title><rect x="105.0" y="517" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="108.04" y="527.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.05%)</title><rect x="889.3" y="213" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="892.30" y="223.5" ></text>
</g>
<g >
<title>net/http.Header.Get (2 samples, 0.09%)</title><rect x="204.5" y="485" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="207.54" y="495.5" ></text>
</g>
<g >
<title>time.open (2 samples, 0.09%)</title><rect x="394.1" y="181" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="397.07" y="191.5" ></text>
</g>
<g >
<title>html/template.htmlReplacer (2 samples, 0.09%)</title><rect x="856.0" y="213" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="858.95" y="223.5" ></text>
</g>
<g >
<title>runtime.goready (4 samples, 0.19%)</title><rect x="356.3" y="453" width="2.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="359.27" y="463.5" ></text>
</g>
<g >
<title>time.absDate (4 samples, 0.19%)</title><rect x="202.3" y="437" width="2.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="205.31" y="447.5" ></text>
</g>
<g >
<title>vendor/golang.org/x/net/http/httpguts.IsTokenRune (1 samples, 0.05%)</title><rect x="983.2" y="533" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="986.24" y="543.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.09%)</title><rect x="1033.3" y="501" width="1.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1036.26" y="511.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (3 samples, 0.14%)</title><rect x="618.6" y="293" width="1.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="621.62" y="303.5" ></text>
</g>
<g >
<title>sync.loadPoolChainElt (2 samples, 0.09%)</title><rect x="117.8" y="469" width="1.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="120.83" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.09%)</title><rect x="669.8" y="261" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="672.76" y="271.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Close (31 samples, 1.46%)</title><rect x="584.7" y="421" width="17.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="587.72" y="431.5" ></text>
</g>
<g >
<title>syscall.Open (2 samples, 0.09%)</title><rect x="394.1" y="165" width="1.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="397.07" y="175.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (3 samples, 0.14%)</title><rect x="122.3" y="485" width="1.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="125.28" y="495.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (3 samples, 0.14%)</title><rect x="964.3" y="293" width="1.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="967.34" y="303.5" ></text>
</g>
<g >
<title>runtime.entersyscall (2 samples, 0.09%)</title><rect x="347.4" y="341" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="350.38" y="351.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.05%)</title><rect x="1061.1" y="485" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1064.05" y="495.5" ></text>
</g>
<g >
<title>net.adapterAddresses (2 samples, 0.09%)</title><rect x="41.7" y="485" width="1.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="44.68" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.Index (3 samples, 0.14%)</title><rect x="901.0" y="229" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="903.98" y="239.5" ></text>
</g>
<g >
<title>vendor/golang.org/x/net/http/httpguts.IsTokenRune (1 samples, 0.05%)</title><rect x="141.7" y="485" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="144.73" y="495.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.05%)</title><rect x="349.0" y="325" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="352.05" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.14%)</title><rect x="137.8" y="485" width="1.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="140.84" y="495.5" ></text>
</g>
<g >
<title>runtime.mapdelete_faststr (2 samples, 0.09%)</title><rect x="128.4" y="469" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="131.39" y="479.5" ></text>
</g>
<g >
<title>net.(*sysDialer).doDialTCPProto (54 samples, 2.54%)</title><rect x="42.8" y="485" width="30.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="45.79" y="495.5" >ne..</text>
</g>
<g >
<title>database/sql.convertAssignRows (213 samples, 10.03%)</title><rect x="624.2" y="421" width="118.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="627.18" y="431.5" >database/sql.c..</text>
</g>
<g >
<title>net.(*sysDialer).dialParallel.func1 (54 samples, 2.54%)</title><rect x="42.8" y="549" width="30.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="45.79" y="559.5" >ne..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="615.3" y="293" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="618.28" y="303.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.05%)</title><rect x="391.8" y="85" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="394.85" y="95.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (1 samples, 0.05%)</title><rect x="1137.2" y="533" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1140.20" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (4 samples, 0.19%)</title><rect x="669.2" y="277" width="2.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="672.20" y="287.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.05%)</title><rect x="1103.3" y="469" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1106.29" y="479.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (2 samples, 0.09%)</title><rect x="111.2" y="469" width="1.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="114.16" y="479.5" ></text>
</g>
<g >
<title>text/template.(*state).printValue (20 samples, 0.94%)</title><rect x="959.9" y="341" width="11.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="962.89" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.05%)</title><rect x="173.4" y="373" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="176.41" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="614.7" y="213" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="617.73" y="223.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="856.5" y="181" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="859.51" y="191.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.05%)</title><rect x="785.4" y="357" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="788.37" y="367.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (12 samples, 0.57%)</title><rect x="1115.0" y="501" width="6.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1117.96" y="511.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.05%)</title><rect x="347.9" y="309" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="350.94" y="319.5" ></text>
</g>
<g >
<title>io.ReadFull (1 samples, 0.05%)</title><rect x="611.4" y="341" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="614.39" y="351.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int32).CompareAndSwap (1 samples, 0.05%)</title><rect x="189.5" y="469" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="192.53" y="479.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (2 samples, 0.09%)</title><rect x="561.9" y="101" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="564.93" y="111.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="774.8" y="437" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="777.80" y="447.5" ></text>
</g>
<g >
<title>time.Time.Sub (3 samples, 0.14%)</title><rect x="360.7" y="453" width="1.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="363.72" y="463.5" ></text>
</g>
<g >
<title>net.(*sysDialer).doDialTCP (54 samples, 2.54%)</title><rect x="42.8" y="501" width="30.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="45.79" y="511.5" >ne..</text>
</g>
<g >
<title>database/sql.(*Rows).Scan (218 samples, 10.27%)</title><rect x="623.6" y="437" width="121.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="626.62" y="447.5" >database/sql.(*..</text>
</g>
<g >
<title>runtime.heapSetType (2 samples, 0.09%)</title><rect x="165.6" y="453" width="1.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="168.63" y="463.5" ></text>
</g>
<g >
<title>runtime.scanobject (19 samples, 0.89%)</title><rect x="1045.5" y="485" width="10.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1048.49" y="495.5" ></text>
</g>
<g >
<title>runtime.roundupsize (1 samples, 0.05%)</title><rect x="980.5" y="453" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="983.46" y="463.5" ></text>
</g>
<g >
<title>net/http.(*Request).wantsClose (1 samples, 0.05%)</title><rect x="115.0" y="517" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="118.05" y="527.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.05%)</title><rect x="948.2" y="213" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="951.22" y="223.5" ></text>
</g>
<g >
<title>text/template.isMissing (1 samples, 0.05%)</title><rect x="790.4" y="341" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="793.37" y="351.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.05%)</title><rect x="567.5" y="181" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="570.48" y="191.5" ></text>
</g>
<g >
<title>syscall.Syscall (10 samples, 0.47%)</title><rect x="586.9" y="165" width="5.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="589.94" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="618.1" y="229" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="621.06" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (3 samples, 0.14%)</title><rect x="70.0" y="405" width="1.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="73.03" y="415.5" ></text>
</g>
<g >
<title>syscall.Syscall9 (251 samples, 11.82%)</title><rect x="210.1" y="389" width="139.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="213.09" y="399.5" >syscall.Syscall9</text>
</g>
<g >
<title>runtime.(*mheap).initSpan (2 samples, 0.09%)</title><rect x="138.4" y="341" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="141.39" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (6 samples, 0.28%)</title><rect x="668.6" y="293" width="3.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="671.64" y="303.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.05%)</title><rect x="927.1" y="213" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="930.10" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (1 samples, 0.05%)</title><rect x="431.3" y="149" width="0.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="434.31" y="159.5" ></text>
</g>
<g >
<title>runtime.schedule (132 samples, 6.22%)</title><rect x="1062.7" y="517" width="73.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1065.72" y="527.5" >runtime...</text>
</g>
<g >
<title>runtime.(*mcentral).fullSwept (1 samples, 0.05%)</title><rect x="174.0" y="453" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="176.97" y="463.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="173.4" y="405" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="176.41" y="415.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (1 samples, 0.05%)</title><rect x="1137.2" y="485" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1140.20" y="495.5" ></text>
</g>
<g >
<title>net/url.parseQuery (3 samples, 0.14%)</title><rect x="979.9" y="469" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="982.90" y="479.5" ></text>
</g>
<g >
<title>net/http.(*conn).setState (1 samples, 0.05%)</title><rect x="176.7" y="533" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="179.75" y="543.5" ></text>
</g>
<g >
<title>runtime.rtype.typeOff (3 samples, 0.14%)</title><rect x="956.6" y="229" width="1.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="959.56" y="239.5" ></text>
</g>
<g >
<title>syscall.SyscallN (26 samples, 1.22%)</title><rect x="415.7" y="85" width="14.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="418.75" y="95.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).propagateCancel (9 samples, 0.42%)</title><rect x="108.9" y="501" width="5.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="111.94" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslice (6 samples, 0.28%)</title><rect x="565.8" y="245" width="3.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="568.82" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (2 samples, 0.09%)</title><rect x="750.9" y="405" width="1.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="753.90" y="415.5" ></text>
</g>
<g >
<title>reflect.(*structType).FieldByName (14 samples, 0.66%)</title><rect x="944.9" y="245" width="7.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="947.88" y="255.5" ></text>
</g>
<g >
<title>runtime.handlecompletion (1 samples, 0.05%)</title><rect x="1077.7" y="469" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1080.72" y="479.5" ></text>
</g>
<g >
<title>net/http.Header.get (1 samples, 0.05%)</title><rect x="785.9" y="373" width="0.6" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="788.92" y="383.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.05%)</title><rect x="1188.3" y="501" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1191.33" y="511.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="114.5" y="485" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="117.49" y="495.5" ></text>
</g>
<g >
<title>net.(*netFD).connect.func2 (1 samples, 0.05%)</title><rect x="55.6" y="405" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="58.58" y="415.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.05%)</title><rect x="748.7" y="405" width="0.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="751.68" y="415.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (4 samples, 0.19%)</title><rect x="917.1" y="181" width="2.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="920.09" y="191.5" ></text>
</g>
<g >
<title>bytes.IndexByte (1 samples, 0.05%)</title><rect x="608.6" y="357" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="611.62" y="367.5" ></text>
</g>
<g >
<title>reflect.valueInterface (9 samples, 0.42%)</title><rect x="906.5" y="197" width="5.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="909.53" y="207.5" ></text>
</g>
<g >
<title>internal/abi.(*Type).Kind (1 samples, 0.05%)</title><rect x="777.0" y="453" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="780.03" y="463.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.05%)</title><rect x="573.6" y="293" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="576.60" y="303.5" ></text>
</g>
<g >
<title>runtime.memequal (2 samples, 0.09%)</title><rect x="958.8" y="277" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="961.78" y="287.5" ></text>
</g>
<g >
<title>net.(*conn).Write (255 samples, 12.01%)</title><rect x="208.4" y="485" width="141.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="211.43" y="495.5" >net.(*conn).Write</text>
</g>
<g >
<title>sync.(*copyChecker).check (1 samples, 0.05%)</title><rect x="365.7" y="501" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="368.72" y="511.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.05%)</title><rect x="567.5" y="149" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="570.48" y="159.5" ></text>
</g>
<g >
<title>internal/poll.execIO (22 samples, 1.04%)</title><rect x="42.8" y="389" width="12.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="45.79" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).destroy (10 samples, 0.47%)</title><rect x="586.9" y="197" width="5.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="589.94" y="207.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (1 samples, 0.05%)</title><rect x="672.0" y="309" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="674.98" y="319.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).recv (1 samples, 0.05%)</title><rect x="397.4" y="277" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="400.40" y="287.5" ></text>
</g>
<g >
<title>indexbytebody (2 samples, 0.09%)</title><rect x="153.4" y="437" width="1.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="156.40" y="447.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.05%)</title><rect x="10.6" y="517" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.56" y="527.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.05%)</title><rect x="953.2" y="245" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="956.22" y="255.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Done (3 samples, 0.14%)</title><rect x="96.2" y="469" width="1.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="99.15" y="479.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).Close (11 samples, 0.52%)</title><rect x="586.9" y="293" width="6.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="589.94" y="303.5" ></text>
</g>
<g >
<title>runtime.checkIdleGCNoP (1 samples, 0.05%)</title><rect x="1071.6" y="485" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1074.61" y="495.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.05%)</title><rect x="565.8" y="213" width="0.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="568.82" y="223.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*Float64Array).Scan (197 samples, 9.28%)</title><rect x="628.6" y="405" width="109.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="631.62" y="415.5" >github.com/li..</text>
</g>
<g >
<title>runtime.gogo (1 samples, 0.05%)</title><rect x="1064.4" y="485" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1067.39" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mspan).heapBits (1 samples, 0.05%)</title><rect x="682.5" y="277" width="0.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="685.54" y="287.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Int64).Load (4 samples, 0.19%)</title><rect x="1110.5" y="469" width="2.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1113.52" y="479.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).Close.func1 (11 samples, 0.52%)</title><rect x="586.9" y="277" width="6.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="589.94" y="287.5" ></text>
</g>
<g >
<title>net.(*conn).Close (11 samples, 0.52%)</title><rect x="586.9" y="261" width="6.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="589.94" y="271.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).ReadMIMEHeader (43 samples, 2.03%)</title><rect x="145.1" y="517" width="23.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="148.06" y="527.5" >n..</text>
</g>
<g >
<title>bytes.IndexByte (2 samples, 0.09%)</title><rect x="153.4" y="453" width="1.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="156.40" y="463.5" ></text>
</g>
<g >
<title>runtime.limiterEventStamp.typ (1 samples, 0.05%)</title><rect x="1121.6" y="437" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1124.63" y="447.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*UnsafePointer).Load (1 samples, 0.05%)</title><rect x="131.7" y="389" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="134.72" y="399.5" ></text>
</g>
<g >
<title>syscall.SyscallN (251 samples, 11.82%)</title><rect x="210.1" y="373" width="139.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="213.09" y="383.5" >syscall.SyscallN</text>
</g>
<g >
<title>runtime.cgocall (31 samples, 1.46%)</title><rect x="988.2" y="405" width="17.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="991.24" y="415.5" ></text>
</g>
<g >
<title>syscall.Syscall9 (26 samples, 1.22%)</title><rect x="415.7" y="101" width="14.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="418.75" y="111.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.05%)</title><rect x="745.9" y="357" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="748.90" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (2 samples, 0.09%)</title><rect x="132.3" y="421" width="1.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="135.28" y="431.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.05%)</title><rect x="1038.8" y="501" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1041.82" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="774.8" y="453" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="777.80" y="463.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.05%)</title><rect x="596.4" y="341" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="599.39" y="351.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (8 samples, 0.38%)</title><rect x="873.2" y="117" width="4.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="876.18" y="127.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (1 samples, 0.05%)</title><rect x="1036.6" y="453" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1039.59" y="463.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (34 samples, 1.60%)</title><rect x="1160.5" y="533" width="18.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1163.54" y="543.5" ></text>
</g>
<g >
<title>net.(*Resolver).lookupIP.func2 (59 samples, 2.78%)</title><rect x="10.0" y="549" width="32.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >ne..</text>
</g>
<g >
<title>net/textproto.readMIMEHeader (41 samples, 1.93%)</title><rect x="145.1" y="501" width="22.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="148.06" y="511.5" >n..</text>
</g>
<g >
<title>text/template.(*state).walkRange.func2 (321 samples, 15.12%)</title><rect x="793.1" y="389" width="178.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="796.15" y="399.5" >text/template.(*state)...</text>
</g>
<g >
<title>syscall.SyscallN (2 samples, 0.09%)</title><rect x="593.1" y="165" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="596.05" y="175.5" ></text>
</g>
<g >
<title>runtime.stdcall6 (26 samples, 1.22%)</title><rect x="1085.0" y="469" width="14.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1087.95" y="479.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (1 samples, 0.05%)</title><rect x="1136.1" y="469" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1139.09" y="479.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.05%)</title><rect x="1059.9" y="485" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1062.94" y="495.5" ></text>
</g>
<g >
<title>reflect.(*rtype).AssignableTo (5 samples, 0.24%)</title><rect x="738.1" y="405" width="2.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="741.12" y="415.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.05%)</title><rect x="102.3" y="533" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="105.27" y="543.5" ></text>
</g>
<g >
<title>syscall.bind (20 samples, 0.94%)</title><rect x="56.1" y="389" width="11.1" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="59.13" y="399.5" ></text>
</g>
<g >
<title>net/http.(*routingNode).matchMethodAndPath (4 samples, 0.19%)</title><rect x="369.1" y="453" width="2.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="372.06" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="131.7" y="437" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="134.72" y="447.5" ></text>
</g>
<g >
<title>net/http.(*response).write (5 samples, 0.24%)</title><rect x="783.7" y="389" width="2.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="786.70" y="399.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (2 samples, 0.09%)</title><rect x="560.3" y="85" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="563.26" y="95.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Close (3 samples, 0.14%)</title><rect x="581.9" y="437" width="1.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="584.94" y="447.5" ></text>
</g>
<g >
<title>runtime.systemstack (94 samples, 4.43%)</title><rect x="1136.6" y="549" width="52.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1139.64" y="559.5" >runti..</text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.05%)</title><rect x="671.4" y="277" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="674.42" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="928.2" y="149" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="931.21" y="159.5" ></text>
</g>
<g >
<title>runtime.duffzero (2 samples, 0.09%)</title><rect x="925.4" y="229" width="1.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="928.43" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="748.1" y="421" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="751.13" y="431.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.05%)</title><rect x="176.2" y="517" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="179.19" y="527.5" ></text>
</g>
<g >
<title>net.newTCPConn (2 samples, 0.09%)</title><rect x="71.7" y="469" width="1.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="74.70" y="479.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).send (232 samples, 10.93%)</title><rect x="435.8" y="261" width="128.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="438.76" y="271.5" >github.com/lib/p..</text>
</g>
<g >
<title>syscall.(*LazyProc).Find (4 samples, 0.19%)</title><rect x="1007.1" y="453" width="2.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1010.14" y="463.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.09%)</title><rect x="358.5" y="469" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="361.50" y="479.5" ></text>
</g>
<g >
<title>strconv.special (1 samples, 0.05%)</title><rect x="737.6" y="325" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="740.56" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.14%)</title><rect x="816.5" y="261" width="1.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="819.49" y="271.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (255 samples, 12.01%)</title><rect x="208.4" y="469" width="141.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="211.43" y="479.5" >net.(*netFD).Write</text>
</g>
<g >
<title>net/http.(*conn).serve (1,640 samples, 77.25%)</title><rect x="72.8" y="549" width="911.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="75.81" y="559.5" >net/http.(*conn).serve</text>
</g>
<g >
<title>database/sql.(*DB).startCleanerLocked (1 samples, 0.05%)</title><rect x="586.4" y="341" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="589.38" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.19%)</title><rect x="897.6" y="197" width="2.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="900.64" y="207.5" ></text>
</g>
<g >
<title>runtime.wakep (16 samples, 0.75%)</title><rect x="1179.4" y="501" width="8.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1182.44" y="511.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="570.3" y="245" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="573.26" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.05%)</title><rect x="1138.3" y="501" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1141.31" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslice (7 samples, 0.33%)</title><rect x="815.4" y="277" width="3.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="818.38" y="287.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.05%)</title><rect x="565.3" y="229" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="568.26" y="239.5" ></text>
</g>
<g >
<title>main.(*Application).GetAllFromDB (307 samples, 14.46%)</title><rect x="579.7" y="453" width="170.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="582.71" y="463.5" >main.(*Application).Ge..</text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.05%)</title><rect x="565.8" y="197" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="568.82" y="207.5" ></text>
</g>
<g >
<title>runtime.cgocall (3 samples, 0.14%)</title><rect x="392.4" y="117" width="1.7" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="395.40" y="127.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.09%)</title><rect x="1133.9" y="485" width="1.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1136.86" y="495.5" ></text>
</g>
<g >
<title>internal/abi.(*Type).Kind (1 samples, 0.05%)</title><rect x="963.8" y="293" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="966.78" y="303.5" ></text>
</g>
<g >
<title>syscall.SyscallN (27 samples, 1.27%)</title><rect x="77.8" y="373" width="15.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="80.81" y="383.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (5 samples, 0.24%)</title><rect x="955.4" y="245" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="958.45" y="255.5" ></text>
</g>
<g >
<title>runtime.stdcall6 (1 samples, 0.05%)</title><rect x="1059.9" y="469" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1062.94" y="479.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.05%)</title><rect x="982.7" y="453" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="985.68" y="463.5" ></text>
</g>
<g >
<title>net/http.putBufioWriter (1 samples, 0.05%)</title><rect x="366.3" y="517" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="369.28" y="527.5" ></text>
</g>
<g >
<title>runtime.isDirectIface (1 samples, 0.05%)</title><rect x="918.8" y="165" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="921.76" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="618.1" y="245" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="621.06" y="255.5" ></text>
</g>
<g >
<title>text/template.(*Template).Execute (351 samples, 16.53%)</title><rect x="777.0" y="469" width="195.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="780.03" y="479.5" >text/template.(*Template)..</text>
</g>
<g >
<title>reflect.Value.assignTo (15 samples, 0.71%)</title><rect x="903.2" y="213" width="8.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="906.20" y="223.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="899.9" y="197" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="902.86" y="207.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (5 samples, 0.24%)</title><rect x="182.9" y="453" width="2.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="185.86" y="463.5" ></text>
</g>
<g >
<title>database/sql.withLock (5 samples, 0.24%)</title><rect x="597.5" y="389" width="2.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="600.50" y="399.5" ></text>
</g>
<g >
<title>strconv.ParseFloat (67 samples, 3.16%)</title><rect x="700.9" y="373" width="37.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="703.88" y="383.5" >str..</text>
</g>
<g >
<title>syscall.SetsockoptInt (2 samples, 0.09%)</title><rect x="71.7" y="437" width="1.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="74.70" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.09%)</title><rect x="138.4" y="421" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="141.39" y="431.5" ></text>
</g>
<g >
<title>runtime.preemptone (1 samples, 0.05%)</title><rect x="1137.8" y="485" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1140.75" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write.func1 (223 samples, 10.50%)</title><rect x="439.6" y="181" width="124.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="442.65" y="191.5" >internal/poll.(..</text>
</g>
<g >
<title>runtime.stkbucket (1 samples, 0.05%)</title><rect x="859.8" y="133" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="862.84" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.05%)</title><rect x="746.5" y="389" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="749.46" y="399.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.05%)</title><rect x="750.3" y="437" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="753.35" y="447.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="784.8" y="357" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="787.81" y="367.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (1 samples, 0.05%)</title><rect x="1138.3" y="453" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1141.31" y="463.5" ></text>
</g>
<g >
<title>syscall.Syscall9 (2 samples, 0.09%)</title><rect x="394.1" y="133" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="397.07" y="143.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (2 samples, 0.09%)</title><rect x="561.9" y="85" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="564.93" y="95.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.05%)</title><rect x="113.9" y="469" width="0.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="116.94" y="479.5" ></text>
</g>
<g >
<title>strings.genSplit (5 samples, 0.24%)</title><rect x="753.1" y="437" width="2.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="756.13" y="447.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.05%)</title><rect x="1061.1" y="469" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1064.05" y="479.5" ></text>
</g>
<g >
<title>syscall.Syscall9 (2 samples, 0.09%)</title><rect x="593.1" y="181" width="1.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="596.05" y="191.5" ></text>
</g>
<g >
<title>runtime.muintptr.ptr (1 samples, 0.05%)</title><rect x="186.2" y="453" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="189.19" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.05%)</title><rect x="923.8" y="85" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="926.76" y="95.5" ></text>
</g>
<g >
<title>reflect.funcLayout (14 samples, 0.66%)</title><rect x="913.2" y="229" width="7.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="916.20" y="239.5" ></text>
</g>
<g >
<title>syscall.SyscallN (22 samples, 1.04%)</title><rect x="42.8" y="309" width="12.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="45.79" y="319.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (2 samples, 0.09%)</title><rect x="1038.3" y="517" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1041.26" y="527.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (2 samples, 0.09%)</title><rect x="117.8" y="485" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="120.83" y="495.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Implements (3 samples, 0.14%)</title><rect x="969.3" y="309" width="1.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="972.34" y="319.5" ></text>
</g>
<g >
<title>runtime.nobarrierWakeTime (1 samples, 0.05%)</title><rect x="1101.1" y="485" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1104.07" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="569.7" y="245" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="572.71" y="255.5" ></text>
</g>
<g >
<title>runtime.stealWork (16 samples, 0.75%)</title><rect x="1103.8" y="485" width="8.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1106.85" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="614.7" y="277" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="617.73" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (2 samples, 0.09%)</title><rect x="138.4" y="373" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="141.39" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="748.7" y="421" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="751.68" y="431.5" ></text>
</g>
<g >
<title>net/url.parseQuery (1 samples, 0.05%)</title><rect x="400.7" y="261" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="403.74" y="271.5" ></text>
</g>
<g >
<title>syscall.(*LazyProc).mustFind (1 samples, 0.05%)</title><rect x="77.3" y="405" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="80.25" y="415.5" ></text>
</g>
<g >
<title>text/template.(*state).evalFieldChain (34 samples, 1.60%)</title><rect x="939.9" y="293" width="18.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="942.88" y="303.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.05%)</title><rect x="1138.3" y="469" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1141.31" y="479.5" ></text>
</g>
<g >
<title>database/sql.(*DB).queryDC (316 samples, 14.88%)</title><rect x="404.1" y="373" width="175.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="407.07" y="383.5" >database/sql.(*DB).que..</text>
</g>
<g >
<title>github.com/lib/pq.(*syncErr).getForNext (1 samples, 0.05%)</title><rect x="612.5" y="357" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="615.51" y="367.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.05%)</title><rect x="135.1" y="437" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="138.06" y="447.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (4 samples, 0.19%)</title><rect x="620.3" y="325" width="2.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="623.29" y="335.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.05%)</title><rect x="398.5" y="133" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="401.52" y="143.5" ></text>
</g>
<g >
<title>database/sql.(*DB).conn (41 samples, 1.93%)</title><rect x="381.3" y="373" width="22.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="384.29" y="383.5" >d..</text>
</g>
<g >
<title>html/template.stringify (29 samples, 1.37%)</title><rect x="867.6" y="197" width="16.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="870.63" y="207.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).sendSimpleMessage (2 samples, 0.09%)</title><rect x="593.1" y="293" width="1.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="596.05" y="303.5" ></text>
</g>
<g >
<title>reflect.intToReg (1 samples, 0.05%)</title><rect x="922.7" y="229" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="925.65" y="239.5" ></text>
</g>
<g >
<title>text/template.indirect (1 samples, 0.05%)</title><rect x="971.6" y="389" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="974.56" y="399.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.05%)</title><rect x="560.3" y="69" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="563.26" y="79.5" ></text>
</g>
<g >
<title>time.loadTzinfo (12 samples, 0.57%)</title><rect x="390.7" y="229" width="6.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="393.73" y="239.5" ></text>
</g>
<g >
<title>runtime.cheaprand (1 samples, 0.05%)</title><rect x="1071.1" y="485" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1074.06" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read.func1 (27 samples, 1.27%)</title><rect x="415.2" y="133" width="15.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="418.19" y="143.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="748.7" y="437" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="751.68" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="778.7" y="421" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="781.70" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.19%)</title><rect x="923.2" y="213" width="2.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="926.21" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (1 samples, 0.05%)</title><rect x="670.3" y="181" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="673.31" y="191.5" ></text>
</g>
<g >
<title>net/http.readRequest (39 samples, 1.84%)</title><rect x="119.5" y="517" width="21.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="122.50" y="527.5" >n..</text>
</g>
<g >
<title>bytes.HasPrefix (1 samples, 0.05%)</title><rect x="645.9" y="357" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="648.85" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="614.7" y="293" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="617.73" y="303.5" ></text>
</g>
<g >
<title>strings.Cut (1 samples, 0.05%)</title><rect x="135.1" y="469" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="138.06" y="479.5" ></text>
</g>
<g >
<title>time.Time.date (6 samples, 0.28%)</title><rect x="201.2" y="453" width="3.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="204.20" y="463.5" ></text>
</g>
<g >
<title>syscall.WSARecv (26 samples, 1.22%)</title><rect x="415.7" y="117" width="14.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="418.75" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.05%)</title><rect x="164.5" y="341" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="167.52" y="351.5" ></text>
</g>
<g >
<title>bytes.Cut (4 samples, 0.19%)</title><rect x="152.3" y="469" width="2.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="155.29" y="479.5" ></text>
</g>
<g >
<title>syscall.Syscall9 (22 samples, 1.04%)</title><rect x="42.8" y="325" width="12.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="45.79" y="335.5" ></text>
</g>
<g >
<title>runtime.cgocall (3 samples, 0.14%)</title><rect x="68.4" y="373" width="1.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="71.36" y="383.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="769.2" y="389" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="772.25" y="399.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write.func1 (2 samples, 0.09%)</title><rect x="593.1" y="213" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="596.05" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.14%)</title><rect x="778.1" y="437" width="1.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="781.14" y="447.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (1 samples, 0.05%)</title><rect x="979.9" y="453" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="982.90" y="463.5" ></text>
</g>
<g >
<title>runtime.entersyscall (3 samples, 0.14%)</title><rect x="560.3" y="101" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="563.26" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="173.4" y="453" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="176.41" y="463.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (1 samples, 0.05%)</title><rect x="1137.2" y="437" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1140.20" y="447.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="698.1" y="357" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="701.10" y="367.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (5 samples, 0.24%)</title><rect x="1046.0" y="469" width="2.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1049.04" y="479.5" ></text>
</g>
<g >
<title>net.socket (52 samples, 2.45%)</title><rect x="42.8" y="453" width="28.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="45.79" y="463.5" >ne..</text>
</g>
<g >
<title>net/http.(*ServeMux).ServeHTTP (1,106 samples, 52.10%)</title><rect x="368.5" y="517" width="614.7" height="15.0" fill="rgb(239,158,38)" rx="2" ry="2" />
<text  x="371.50" y="527.5" >net/http.(*ServeMux).ServeHTTP</text>
</g>
<g >
<title>fmt.newPrinter (4 samples, 0.19%)</title><rect x="966.0" y="309" width="2.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="969.01" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="113.9" y="485" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="116.94" y="495.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).processParameterStatus (13 samples, 0.61%)</title><rect x="390.2" y="277" width="7.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="393.18" y="287.5" ></text>
</g>
<g >
<title>internal/bytealg.MakeNoZero (4 samples, 0.19%)</title><rect x="865.4" y="149" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="868.40" y="159.5" ></text>
</g>
<g >
<title>runtime.runqsteal (1 samples, 0.05%)</title><rect x="1060.5" y="469" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1063.49" y="479.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write.func1 (251 samples, 11.82%)</title><rect x="210.1" y="421" width="139.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="213.09" y="431.5" >internal/poll.(*F..</text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.05%)</title><rect x="1075.5" y="437" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1078.50" y="447.5" ></text>
</g>
<g >
<title>reflect.toType (1 samples, 0.05%)</title><rect x="934.3" y="245" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="937.32" y="255.5" ></text>
</g>
<g >
<title>syscall.Close (3 samples, 0.14%)</title><rect x="392.4" y="181" width="1.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="395.40" y="191.5" ></text>
</g>
<g >
<title>strconv.ParseInt (2 samples, 0.09%)</title><rect x="741.5" y="405" width="1.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="744.46" y="415.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (2 samples, 0.09%)</title><rect x="982.1" y="469" width="1.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="985.12" y="479.5" ></text>
</g>
<g >
<title>net.(*Resolver).resolveAddrList (4 samples, 0.19%)</title><rect x="398.0" y="245" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="400.96" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (2 samples, 0.09%)</title><rect x="563.6" y="181" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="566.59" y="191.5" ></text>
</g>
<g >
<title>net/http.(*response).Write (6 samples, 0.28%)</title><rect x="783.1" y="405" width="3.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="786.14" y="415.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Next (72 samples, 3.39%)</title><rect x="583.6" y="437" width="40.0" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="586.60" y="447.5" >dat..</text>
</g>
<g >
<title>net/http.parseRequestLine (2 samples, 0.09%)</title><rect x="123.9" y="501" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="126.94" y="511.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="615.8" y="309" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="618.84" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.09%)</title><rect x="923.8" y="197" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="926.76" y="207.5" ></text>
</g>
<g >
<title>text/template.(*state).varValue (2 samples, 0.09%)</title><rect x="958.8" y="293" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="961.78" y="303.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (7 samples, 0.33%)</title><rect x="155.6" y="469" width="3.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="158.62" y="479.5" ></text>
</g>
<g >
<title>runtime.findnull (1 samples, 0.05%)</title><rect x="1057.2" y="469" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1060.16" y="479.5" ></text>
</g>
<g >
<title>database/sql.withLock (13 samples, 0.61%)</title><rect x="586.9" y="325" width="7.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="589.94" y="335.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (1 samples, 0.05%)</title><rect x="177.9" y="517" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="180.86" y="527.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.05%)</title><rect x="391.8" y="149" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="394.85" y="159.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.05%)</title><rect x="792.0" y="357" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="795.03" y="367.5" ></text>
</g>
<g >
<title>fmt.Fprint (16 samples, 0.75%)</title><rect x="959.9" y="325" width="8.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="962.89" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="400.7" y="229" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="403.74" y="239.5" ></text>
</g>
<g >
<title>runtime.wakep (21 samples, 0.99%)</title><rect x="1121.6" y="485" width="11.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1124.63" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (2 samples, 0.09%)</title><rect x="593.1" y="245" width="1.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="596.05" y="255.5" ></text>
</g>
<g >
<title>github.com/lib/pq.textDecode (18 samples, 0.85%)</title><rect x="613.1" y="341" width="10.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="616.06" y="351.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (1 samples, 0.05%)</title><rect x="611.4" y="309" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="614.39" y="319.5" ></text>
</g>
<g >
<title>runtime.stdcall5 (12 samples, 0.57%)</title><rect x="1078.3" y="469" width="6.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1081.28" y="479.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="159.5" y="453" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="162.51" y="463.5" ></text>
</g>
<g >
<title>net/http.fixLength (1 samples, 0.05%)</title><rect x="127.3" y="485" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="130.28" y="495.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (4 samples, 0.19%)</title><rect x="698.7" y="373" width="2.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="701.66" y="383.5" ></text>
</g>
<g >
<title>slices.SortFunc[go.shape.[]main.DocumentResult,go.shape.struct (3 samples, 0.14%)</title><rect x="775.4" y="469" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="778.36" y="479.5" ></text>
</g>
<g >
<title>net/http.validMethod (2 samples, 0.09%)</title><rect x="141.2" y="517" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="144.17" y="527.5" ></text>
</g>
<g >
<title>net/http.DetectContentType (6 samples, 0.28%)</title><rect x="193.4" y="469" width="3.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="196.42" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="107.3" y="485" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="110.27" y="495.5" ></text>
</g>
<g >
<title>runtime.findRunnable (90 samples, 4.24%)</title><rect x="1064.9" y="501" width="50.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1067.94" y="511.5" >runti..</text>
</g>
<g >
<title>runtime.traceLocker.ok (1 samples, 0.05%)</title><rect x="697.0" y="309" width="0.5" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="699.99" y="319.5" ></text>
</g>
<g >
<title>syscall.SyscallN (41 samples, 1.93%)</title><rect x="1009.4" y="437" width="22.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1012.36" y="447.5" >s..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="754.2" y="405" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="757.24" y="415.5" ></text>
</g>
<g >
<title>syscall.Syscall9 (27 samples, 1.27%)</title><rect x="77.8" y="389" width="15.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="80.81" y="399.5" ></text>
</g>
<g >
<title>runtime.cgocall (1 samples, 0.05%)</title><rect x="67.2" y="357" width="0.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="70.25" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (1 samples, 0.05%)</title><rect x="359.1" y="437" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="362.05" y="447.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.05%)</title><rect x="165.1" y="405" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="168.07" y="415.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.09%)</title><rect x="880.4" y="165" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="883.41" y="175.5" ></text>
</g>
<g >
<title>runtime.sweepone (6 samples, 0.28%)</title><rect x="1036.0" y="533" width="3.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1039.04" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="928.2" y="181" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="931.21" y="191.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*readBuf).string (1 samples, 0.05%)</title><rect x="565.3" y="245" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="568.26" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="697.0" y="357" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="699.99" y="367.5" ></text>
</g>
<g >
<title>runtime.acquirem (3 samples, 0.14%)</title><rect x="891.5" y="181" width="1.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="894.53" y="191.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.05%)</title><rect x="1075.5" y="469" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1078.50" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (18 samples, 0.85%)</title><rect x="673.1" y="293" width="10.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="676.09" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.19%)</title><rect x="565.8" y="229" width="2.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="568.82" y="239.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*Float64Array).scanBytes (195 samples, 9.19%)</title><rect x="629.7" y="389" width="108.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="632.74" y="399.5" >github.com/li..</text>
</g>
<g >
<title>text/template.(*state).push (3 samples, 0.14%)</title><rect x="790.9" y="389" width="1.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="793.92" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (2 samples, 0.09%)</title><rect x="174.5" y="469" width="1.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="177.52" y="479.5" ></text>
</g>
<g >
<title>reflect.Value.SetInt (1 samples, 0.05%)</title><rect x="740.9" y="405" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="743.90" y="415.5" ></text>
</g>
<g >
<title>context.removeChild (1 samples, 0.05%)</title><rect x="55.6" y="357" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="58.58" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.09%)</title><rect x="164.5" y="453" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="167.52" y="463.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="929.3" y="197" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="932.32" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="618.1" y="261" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="621.06" y="271.5" ></text>
</g>
<g >
<title>runtime.findfunc (3 samples, 0.14%)</title><rect x="1057.7" y="485" width="1.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1060.72" y="495.5" ></text>
</g>
<g >
<title>html/template.indirect (2 samples, 0.09%)</title><rect x="881.5" y="181" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="884.52" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uintptr).Load (1 samples, 0.05%)</title><rect x="359.6" y="469" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="362.61" y="479.5" ></text>
</g>
<g >
<title>net/http.extraHeader.Write (2 samples, 0.09%)</title><rect x="196.8" y="469" width="1.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="199.75" y="479.5" ></text>
</g>
<g >
<title>runtime.cgocall (220 samples, 10.36%)</title><rect x="441.3" y="117" width="122.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="444.31" y="127.5" >runtime.cgocall</text>
</g>
<g >
<title>syscall.SyscallN (2 samples, 0.09%)</title><rect x="395.2" y="117" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="398.18" y="127.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.19%)</title><rect x="745.3" y="421" width="2.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="748.35" y="431.5" ></text>
</g>
<g >
<title>net/textproto.CanonicalMIMEHeaderKey (1 samples, 0.05%)</title><rect x="127.8" y="469" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="130.83" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.05%)</title><rect x="614.7" y="197" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="617.73" y="207.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.05%)</title><rect x="67.2" y="389" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="70.25" y="399.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (2 samples, 0.09%)</title><rect x="784.3" y="373" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="787.25" y="383.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (2 samples, 0.09%)</title><rect x="796.5" y="309" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="799.48" y="319.5" ></text>
</g>
<g >
<title>runtime.funcname (2 samples, 0.09%)</title><rect x="180.6" y="453" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="183.64" y="463.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (5 samples, 0.24%)</title><rect x="1072.7" y="469" width="2.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1075.72" y="479.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.09%)</title><rect x="401.3" y="277" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="404.30" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.05%)</title><rect x="1103.3" y="453" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1106.29" y="463.5" ></text>
</g>
<g >
<title>all (2,123 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>runtime.netpollready (1 samples, 0.05%)</title><rect x="1077.7" y="453" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1080.72" y="463.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.05%)</title><rect x="754.2" y="421" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="757.24" y="431.5" ></text>
</g>
<g >
<title>text/template.(*state).walkRange (334 samples, 15.73%)</title><rect x="786.5" y="405" width="185.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="789.48" y="415.5" >text/template.(*state).w..</text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.14%)</title><rect x="569.2" y="261" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="572.15" y="271.5" ></text>
</g>
<g >
<title>strings.Index (1 samples, 0.05%)</title><rect x="124.5" y="469" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="127.50" y="479.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="133.4" y="437" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="136.39" y="447.5" ></text>
</g>
<g >
<title>runtime.startm (20 samples, 0.94%)</title><rect x="1122.2" y="469" width="11.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1125.19" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="573.6" y="277" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="576.60" y="287.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.05%)</title><rect x="1056.6" y="501" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1059.60" y="511.5" ></text>
</g>
<g >
<title>net/url.unescape (10 samples, 0.47%)</title><rect x="972.1" y="453" width="5.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="975.12" y="463.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.05%)</title><rect x="1188.3" y="517" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1191.33" y="527.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Peek (31 samples, 1.46%)</title><rect x="76.1" y="533" width="17.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="79.14" y="543.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.05%)</title><rect x="1035.5" y="533" width="0.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1038.48" y="543.5" ></text>
</g>
<g >
<title>internal/bytealg.LastIndexByteString (1 samples, 0.05%)</title><rect x="373.5" y="469" width="0.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="376.50" y="479.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.05%)</title><rect x="1061.6" y="517" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1064.61" y="527.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (1 samples, 0.05%)</title><rect x="397.4" y="229" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="400.40" y="239.5" ></text>
</g>
<g >
<title>strings.ToLower (7 samples, 0.33%)</title><rect x="758.1" y="437" width="3.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="761.13" y="447.5" ></text>
</g>
<g >
<title>io.ReadFull (36 samples, 1.70%)</title><rect x="413.5" y="245" width="20.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="416.52" y="255.5" ></text>
</g>
<g >
<title>net/http.readRequest.func1 (1 samples, 0.05%)</title><rect x="126.2" y="501" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="129.17" y="511.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (1 samples, 0.05%)</title><rect x="578.0" y="325" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="581.05" y="335.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="769.8" y="389" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="772.80" y="399.5" ></text>
</g>
<g >
<title>reflect.(*rtype).common (3 samples, 0.14%)</title><rect x="822.6" y="245" width="1.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="825.60" y="255.5" ></text>
</g>
<g >
<title>runtime.(*limiterEvent).stop (1 samples, 0.05%)</title><rect x="357.9" y="341" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="360.94" y="351.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).closemuRUnlockIfHeldByScan (1 samples, 0.05%)</title><rect x="601.9" y="421" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="604.95" y="431.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (2 samples, 0.09%)</title><rect x="41.7" y="453" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="44.68" y="463.5" ></text>
</g>
<g >
<title>runtime.runqsteal (6 samples, 0.28%)</title><rect x="1107.2" y="469" width="3.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1110.18" y="479.5" ></text>
</g>
<g >
<title>internal/abi.Name.ReadVarint (2 samples, 0.09%)</title><rect x="944.9" y="229" width="1.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="947.88" y="239.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.05%)</title><rect x="1121.6" y="469" width="0.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1124.63" y="479.5" ></text>
</g>
<g >
<title>text/template.(*state).evalCall.func1 (2 samples, 0.09%)</title><rect x="819.3" y="277" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="822.27" y="287.5" ></text>
</g>
<g >
<title>context.parentCancelCtx (1 samples, 0.05%)</title><rect x="108.9" y="485" width="0.6" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="111.94" y="495.5" ></text>
</g>
<g >
<title>syscall.Closesocket (10 samples, 0.47%)</title><rect x="586.9" y="181" width="5.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="589.94" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.05%)</title><rect x="1188.3" y="485" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1191.33" y="495.5" ></text>
</g>
<g >
<title>github.com/lib/pq.parsePortalRowDescribe (8 samples, 0.38%)</title><rect x="564.7" y="261" width="4.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="567.71" y="271.5" ></text>
</g>
<g >
<title>text/template.(*state).walkRange.func2.1 (1 samples, 0.05%)</title><rect x="971.0" y="373" width="0.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="974.01" y="383.5" ></text>
</g>
<g >
<title>runtime.unspillArgs (2 samples, 0.09%)</title><rect x="933.2" y="229" width="1.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="936.21" y="239.5" ></text>
</g>
<g >
<title>sync/atomic.(*Pointer[go.shape.f21d94aacf67699bcfe39d9a5101b548a380024f35e485e5abf415eb165b07d1]).Store (2 samples, 0.09%)</title><rect x="1188.9" y="549" width="1.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1191.89" y="559.5" ></text>
</g>
<g >
<title>database/sql.withLock (38 samples, 1.79%)</title><rect x="602.5" y="421" width="21.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="605.50" y="431.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="578.6" y="341" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="581.60" y="351.5" ></text>
</g>
<g >
<title>bytes.IndexByte (2 samples, 0.09%)</title><rect x="148.4" y="469" width="1.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="151.40" y="479.5" ></text>
</g>
<g >
<title>runtime.morestack (1 samples, 0.05%)</title><rect x="1136.1" y="549" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1139.09" y="559.5" ></text>
</g>
<g >
<title>runtime.forEachPInternal (1 samples, 0.05%)</title><rect x="1137.8" y="517" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1140.75" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="1032.1" y="517" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1035.15" y="527.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.05%)</title><rect x="1137.2" y="501" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1140.20" y="511.5" ></text>
</g>
<g >
<title>syscall.Seek (2 samples, 0.09%)</title><rect x="396.3" y="165" width="1.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="399.29" y="175.5" ></text>
</g>
<g >
<title>syscall.setFilePointerEx (2 samples, 0.09%)</title><rect x="396.3" y="149" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="399.29" y="159.5" ></text>
</g>
<g >
<title>runtime.mget (1 samples, 0.05%)</title><rect x="185.6" y="453" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="188.64" y="463.5" ></text>
</g>
<g >
<title>net/url.Values.Get (2 samples, 0.09%)</title><rect x="982.1" y="485" width="1.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="985.12" y="495.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3 (1 samples, 0.05%)</title><rect x="1036.6" y="485" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1039.59" y="495.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="818.2" y="261" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="821.16" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.05%)</title><rect x="430.2" y="133" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="433.20" y="143.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.05%)</title><rect x="618.1" y="165" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="621.06" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.09%)</title><rect x="685.3" y="325" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="688.32" y="335.5" ></text>
</g>
<g >
<title>runtime.cgocall (20 samples, 0.94%)</title><rect x="56.1" y="341" width="11.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="59.13" y="351.5" ></text>
</g>
<g >
<title>countbody (1 samples, 0.05%)</title><rect x="755.4" y="405" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="758.35" y="415.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.05%)</title><rect x="91.7" y="325" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="94.71" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.05%)</title><rect x="1036.6" y="469" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1039.59" y="479.5" ></text>
</g>
<g >
<title>database/sql.(*DB).queryDC.func1 (306 samples, 14.41%)</title><rect x="406.9" y="341" width="170.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="409.85" y="351.5" >database/sql.(*DB).que..</text>
</g>
<g >
<title>time.Time.Add (2 samples, 0.09%)</title><rect x="361.3" y="437" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="364.28" y="447.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.05%)</title><rect x="1063.8" y="485" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1066.83" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.05%)</title><rect x="164.5" y="357" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="167.52" y="367.5" ></text>
</g>
<g >
<title>runtime.makechan (1 samples, 0.05%)</title><rect x="169.0" y="517" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="171.96" y="527.5" ></text>
</g>
<g >
<title>internal/abi.(*Type).Kind (1 samples, 0.05%)</title><rect x="904.9" y="197" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="907.87" y="207.5" ></text>
</g>
<g >
<title>runtime.netpollblockcommit (1 samples, 0.05%)</title><rect x="1062.2" y="517" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1065.16" y="527.5" ></text>
</g>
<g >
<title>reflect.Value.Set (16 samples, 0.75%)</title><rect x="902.6" y="229" width="8.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="905.64" y="239.5" ></text>
</g>
<g >
<title>net/http.cleanPath (3 samples, 0.14%)</title><rect x="371.8" y="485" width="1.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="374.84" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.05%)</title><rect x="748.7" y="389" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="751.68" y="399.5" ></text>
</g>
<g >
<title>syscall.CreateFile (2 samples, 0.09%)</title><rect x="394.1" y="149" width="1.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="397.07" y="159.5" ></text>
</g>
<g >
<title>reflect.(*rtype).FieldByName (16 samples, 0.75%)</title><rect x="943.8" y="261" width="8.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="946.77" y="271.5" ></text>
</g>
<g >
<title>net/http.writeStatusLine (1 samples, 0.05%)</title><rect x="197.9" y="469" width="0.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="200.87" y="479.5" ></text>
</g>
<g >
<title>runtime.ready (16 samples, 0.75%)</title><rect x="1179.4" y="517" width="8.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1182.44" y="527.5" ></text>
</g>
<g >
<title>runtime.isSystemGoroutine (3 samples, 0.14%)</title><rect x="1057.7" y="501" width="1.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1060.72" y="511.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).recv1Buf (37 samples, 1.74%)</title><rect x="413.0" y="261" width="20.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="415.97" y="271.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (2 samples, 0.09%)</title><rect x="395.2" y="133" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="398.18" y="143.5" ></text>
</g>
<g >
<title>database/sql.dsnConnector.Connect (24 samples, 1.13%)</title><rect x="389.6" y="357" width="13.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="392.62" y="367.5" ></text>
</g>
<g >
<title>strconv.formatBits (2 samples, 0.09%)</title><rect x="199.5" y="453" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="202.53" y="463.5" ></text>
</g>
<g >
<title>text/template.safeCall (192 samples, 9.04%)</title><rect x="828.7" y="277" width="106.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="831.72" y="287.5" >text/template..</text>
</g>
<g >
<title>syscall.Syscall9 (31 samples, 1.46%)</title><rect x="988.2" y="437" width="17.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="991.24" y="447.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.05%)</title><rect x="389.6" y="245" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="392.62" y="255.5" ></text>
</g>
<g >
<title>runtime.findnull (2 samples, 0.09%)</title><rect x="180.6" y="421" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="183.64" y="431.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (16 samples, 0.75%)</title><rect x="93.4" y="533" width="8.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="96.37" y="543.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).cancel (1 samples, 0.05%)</title><rect x="398.0" y="181" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="400.96" y="191.5" ></text>
</g>
<g >
<title>reflect.typedmemmove (1 samples, 0.05%)</title><rect x="908.8" y="165" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="911.76" y="175.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.forEachP.func5 (1 samples, 0.05%)</title><rect x="1137.8" y="533" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1140.75" y="543.5" ></text>
</g>
<g >
<title>runtime.(*gList).pop (1 samples, 0.05%)</title><rect x="180.1" y="453" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="183.08" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.05%)</title><rect x="909.9" y="117" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="912.87" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (2 samples, 0.09%)</title><rect x="669.8" y="197" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="672.76" y="207.5" ></text>
</g>
<g >
<title>runtime.osyield (6 samples, 0.28%)</title><rect x="1107.2" y="453" width="3.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1110.18" y="463.5" ></text>
</g>
<g >
<title>syscall.(*LazyProc).mustFind (4 samples, 0.19%)</title><rect x="1007.1" y="469" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1010.14" y="479.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.05%)</title><rect x="1075.5" y="453" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1078.50" y="463.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.05%)</title><rect x="967.7" y="293" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="970.67" y="303.5" ></text>
</g>
<g >
<title>syscall.ConnectEx (22 samples, 1.04%)</title><rect x="42.8" y="357" width="12.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="45.79" y="367.5" ></text>
</g>
<g >
<title>context.WithCancel (5 samples, 0.24%)</title><rect x="106.2" y="517" width="2.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="109.16" y="527.5" ></text>
</g>
<g >
<title>syscall.(*LazyProc).mustFind (1 samples, 0.05%)</title><rect x="415.2" y="117" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="418.19" y="127.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (1 samples, 0.05%)</title><rect x="92.8" y="405" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="95.82" y="415.5" ></text>
</g>
<g >
<title>reflect.memmove (2 samples, 0.09%)</title><rect x="921.5" y="213" width="1.2" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="924.54" y="223.5" ></text>
</g>
<g >
<title>database/sql.(*driverConn).finalClose.func2 (13 samples, 0.61%)</title><rect x="586.9" y="309" width="7.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="589.94" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.05%)</title><rect x="1005.5" y="469" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1008.47" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="600.3" y="389" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="603.28" y="399.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (1 samples, 0.05%)</title><rect x="968.2" y="277" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="971.23" y="287.5" ></text>
</g>
<g >
<title>path.Clean (3 samples, 0.14%)</title><rect x="371.8" y="469" width="1.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="374.84" y="479.5" ></text>
</g>
<g >
<title>main.(*Application).Search (715 samples, 33.68%)</title><rect x="377.4" y="469" width="397.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="380.40" y="479.5" >main.(*Application).Search</text>
</g>
<g >
<title>runtime.getMCache (2 samples, 0.09%)</title><rect x="949.3" y="197" width="1.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="952.33" y="207.5" ></text>
</g>
<g >
<title>runtime.gfget (1 samples, 0.05%)</title><rect x="181.7" y="453" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="184.75" y="463.5" ></text>
</g>
<g >
<title>runtime.osPreemptExtEnter (1 samples, 0.05%)</title><rect x="563.0" y="101" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="566.04" y="111.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.05%)</title><rect x="799.3" y="293" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="802.26" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).ConnectEx (22 samples, 1.04%)</title><rect x="42.8" y="405" width="12.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="45.79" y="415.5" ></text>
</g>
<g >
<title>reflect.Indirect (4 samples, 0.19%)</title><rect x="742.6" y="421" width="2.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="745.57" y="431.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Value (1 samples, 0.05%)</title><rect x="97.8" y="469" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="100.82" y="479.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).initContextClose (1 samples, 0.05%)</title><rect x="405.2" y="357" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="408.19" y="367.5" ></text>
</g>
<g >
<title>runtime.wakep (39 samples, 1.84%)</title><rect x="1138.9" y="501" width="21.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1141.86" y="511.5" >r..</text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.05%)</title><rect x="429.6" y="53" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="432.64" y="63.5" ></text>
</g>
<g >
<title>strings.IndexByte (1 samples, 0.05%)</title><rect x="370.7" y="421" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="373.73" y="431.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_fast32 (1 samples, 0.05%)</title><rect x="957.7" y="197" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="960.67" y="207.5" ></text>
</g>
<g >
<title>vendor/golang.org/x/net/http/httpguts.ValidHeaderFieldName (1 samples, 0.05%)</title><rect x="983.8" y="533" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="986.79" y="543.5" ></text>
</g>
<g >
<title>runtime.cgocall (2 samples, 0.09%)</title><rect x="71.7" y="373" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="74.70" y="383.5" ></text>
</g>
<g >
<title>net/textproto.MIMEHeader.Get (2 samples, 0.09%)</title><rect x="204.5" y="469" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="207.54" y="479.5" ></text>
</g>
<g >
<title>context.AfterFunc.func1 (1 samples, 0.05%)</title><rect x="55.6" y="389" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="58.58" y="399.5" ></text>
</g>
<g >
<title>internal/abi.(*Type).NumMethod (1 samples, 0.05%)</title><rect x="905.4" y="197" width="0.6" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="908.42" y="207.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.05%)</title><rect x="107.3" y="469" width="0.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="110.27" y="479.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).ConnectEx.func1 (22 samples, 1.04%)</title><rect x="42.8" y="373" width="12.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="45.79" y="383.5" ></text>
</g>
<g >
<title>runtime.growslice (6 samples, 0.28%)</title><rect x="767.6" y="405" width="3.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="770.58" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="884.9" y="181" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="887.86" y="191.5" ></text>
</g>
<g >
<title>gonum.org/v1/gonum/internal/asm/f64.L2NormUnitary (3 samples, 0.14%)</title><rect x="773.1" y="421" width="1.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="776.14" y="431.5" ></text>
</g>
<g >
<title>runtime.makemap_small (1 samples, 0.05%)</title><rect x="169.5" y="517" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="172.52" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="614.7" y="245" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="617.73" y="255.5" ></text>
</g>
<g >
<title>text/template.(*state).evalVariableNode (38 samples, 1.79%)</title><rect x="938.8" y="309" width="21.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="941.77" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read.func1 (28 samples, 1.32%)</title><rect x="77.3" y="421" width="15.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="80.25" y="431.5" ></text>
</g>
<g >
<title>fmt.(*pp).free (3 samples, 0.14%)</title><rect x="964.3" y="309" width="1.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="967.34" y="319.5" ></text>
</g>
<g >
<title>context.WithCancel.func1 (1 samples, 0.05%)</title><rect x="398.0" y="197" width="0.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="400.96" y="207.5" ></text>
</g>
<g >
<title>os.Environ (1 samples, 0.05%)</title><rect x="402.4" y="309" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="405.41" y="319.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (1 samples, 0.05%)</title><rect x="670.9" y="261" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="673.87" y="271.5" ></text>
</g>
<g >
<title>internal/poll.execIO (226 samples, 10.65%)</title><rect x="439.1" y="197" width="125.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="442.09" y="207.5" >internal/poll.e..</text>
</g>
<g >
<title>reflect.memmove (1 samples, 0.05%)</title><rect x="922.7" y="213" width="0.5" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="925.65" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.09%)</title><rect x="164.5" y="437" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="167.52" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (5 samples, 0.24%)</title><rect x="172.9" y="501" width="2.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="175.85" y="511.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.05%)</title><rect x="928.8" y="197" width="0.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="931.77" y="207.5" ></text>
</g>
<g >
<title>database/sql.(*driverConn).finalClose (13 samples, 0.61%)</title><rect x="586.9" y="341" width="7.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="589.94" y="351.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (2 samples, 0.09%)</title><rect x="879.3" y="133" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="882.30" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.05%)</title><rect x="754.2" y="373" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="757.24" y="383.5" ></text>
</g>
<g >
<title>strconv.ParseInt (1 samples, 0.05%)</title><rect x="622.5" y="325" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="625.51" y="335.5" ></text>
</g>
<g >
<title>net/textproto.canonicalMIMEHeaderKey (9 samples, 0.42%)</title><rect x="154.5" y="485" width="5.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="157.51" y="495.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).unpack (1 samples, 0.05%)</title><rect x="118.9" y="469" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="121.94" y="479.5" ></text>
</g>
<g >
<title>github.com/lib/pq.ParseURL (1 samples, 0.05%)</title><rect x="400.7" y="293" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="403.74" y="303.5" ></text>
</g>
<g >
<title>github.com/lib/pq.parseOpts (2 samples, 0.09%)</title><rect x="401.3" y="293" width="1.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="404.30" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.14%)</title><rect x="909.3" y="149" width="1.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="912.31" y="159.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.05%)</title><rect x="398.5" y="117" width="0.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="401.52" y="127.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*readBuf).next (1 samples, 0.05%)</title><rect x="606.4" y="373" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="609.39" y="383.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (1 samples, 0.05%)</title><rect x="391.8" y="53" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="394.85" y="63.5" ></text>
</g>
<g >
<title>runtime.newproc1 (12 samples, 0.57%)</title><rect x="179.0" y="469" width="6.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="181.97" y="479.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (1 samples, 0.05%)</title><rect x="1113.9" y="437" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1116.85" y="447.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="860.4" y="181" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="863.40" y="191.5" ></text>
</g>
<g >
<title>database/sql.ctxDriverQuery (296 samples, 13.94%)</title><rect x="409.6" y="325" width="164.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="412.63" y="335.5" >database/sql.ctxDrive..</text>
</g>
<g >
<title>fmt.newPrinter (3 samples, 0.14%)</title><rect x="878.7" y="165" width="1.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="881.74" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (1 samples, 0.05%)</title><rect x="209.0" y="421" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="211.98" y="431.5" ></text>
</g>
<g >
<title>net/http.(*chunkWriter).writeHeader (21 samples, 0.99%)</title><rect x="192.9" y="485" width="11.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="195.86" y="495.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.05%)</title><rect x="98.4" y="485" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="101.37" y="495.5" ></text>
</g>
<g >
<title>strconv.atof64exact (9 samples, 0.42%)</title><rect x="704.8" y="325" width="5.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="707.77" y="335.5" ></text>
</g>
<g >
<title>runtime.checkRunqsNoP (1 samples, 0.05%)</title><rect x="1072.2" y="485" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1075.17" y="495.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.05%)</title><rect x="102.3" y="485" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="105.27" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="1032.1" y="501" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1035.15" y="511.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="977.1" y="389" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="980.12" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.05%)</title><rect x="924.3" y="165" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="927.32" y="175.5" ></text>
</g>
<g >
<title>runtime.rand (2 samples, 0.09%)</title><rect x="170.1" y="501" width="1.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="173.08" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.19%)</title><rect x="131.7" y="453" width="2.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="134.72" y="463.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (34 samples, 1.60%)</title><rect x="414.6" y="213" width="18.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="417.63" y="223.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (3 samples, 0.14%)</title><rect x="139.5" y="485" width="1.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="142.51" y="495.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (16 samples, 0.75%)</title><rect x="1179.4" y="437" width="8.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1182.44" y="447.5" ></text>
</g>
<g >
<title>runtime.netpollcheckerr (1 samples, 0.05%)</title><rect x="1006.0" y="453" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1009.02" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.09%)</title><rect x="173.4" y="485" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="176.41" y="495.5" ></text>
</g>
<g >
<title>text/template.(*state).evalPipeline (3 samples, 0.14%)</title><rect x="789.3" y="389" width="1.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="792.26" y="399.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (1 samples, 0.05%)</title><rect x="745.9" y="341" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="748.90" y="351.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.09%)</title><rect x="1076.1" y="469" width="1.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1079.06" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (2 samples, 0.09%)</title><rect x="165.6" y="437" width="1.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="168.63" y="447.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.09%)</title><rect x="921.5" y="197" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="924.54" y="207.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (2 samples, 0.09%)</title><rect x="962.7" y="277" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="965.67" y="287.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="133.9" y="453" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="136.95" y="463.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (3 samples, 0.14%)</title><rect x="936.5" y="277" width="1.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="939.55" y="287.5" ></text>
</g>
<g >
<title>reflect.(*rtype).ptrTo (2 samples, 0.09%)</title><rect x="954.3" y="245" width="1.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="957.33" y="255.5" ></text>
</g>
<g >
<title>bytes.Equal (23 samples, 1.08%)</title><rect x="633.1" y="357" width="12.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="636.07" y="367.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.05%)</title><rect x="370.7" y="405" width="0.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="373.73" y="415.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="401.3" y="261" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="404.30" y="271.5" ></text>
</g>
<g >
<title>net/http.Header.get (1 samples, 0.05%)</title><rect x="115.6" y="517" width="0.6" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="118.61" y="527.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="400.2" y="181" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="403.18" y="191.5" ></text>
</g>
<g >
<title>reflect.(*rtype).common (4 samples, 0.19%)</title><rect x="738.7" y="389" width="2.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="741.68" y="399.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="611.4" y="293" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="614.39" y="303.5" ></text>
</g>
<g >
<title>runtime.stdcall0 (1 samples, 0.05%)</title><rect x="1060.5" y="421" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1063.49" y="431.5" ></text>
</g>
<g >
<title>time.(*dataIO).big4 (1 samples, 0.05%)</title><rect x="390.2" y="229" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="393.18" y="239.5" ></text>
</g>
<g >
<title>strings.(*Builder).Grow (2 samples, 0.09%)</title><rect x="760.9" y="421" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="763.91" y="431.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (1 samples, 0.05%)</title><rect x="400.7" y="197" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="403.74" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.09%)</title><rect x="138.4" y="437" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="141.39" y="447.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.05%)</title><rect x="164.5" y="309" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="167.52" y="319.5" ></text>
</g>
<g >
<title>time.NewTimer (1 samples, 0.05%)</title><rect x="400.2" y="229" width="0.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="403.18" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (39 samples, 1.84%)</title><rect x="1138.9" y="453" width="21.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1141.86" y="463.5" >r..</text>
</g>
<g >
<title>text/template.(*Template).execute (350 samples, 16.49%)</title><rect x="777.6" y="453" width="194.5" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="780.58" y="463.5" >text/template.(*Template)..</text>
</g>
<g >
<title>runtime.goexit0 (10 samples, 0.47%)</title><rect x="1056.0" y="533" width="5.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1059.05" y="543.5" ></text>
</g>
<g >
<title>syscall.SyscallN (2 samples, 0.09%)</title><rect x="394.1" y="117" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="397.07" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.05%)</title><rect x="923.8" y="101" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="926.76" y="111.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteString (2 samples, 0.09%)</title><rect x="757.0" y="437" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="760.02" y="447.5" ></text>
</g>
<g >
<title>bytes.makeASCIISet (1 samples, 0.05%)</title><rect x="147.8" y="485" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="150.84" y="495.5" ></text>
</g>
<g >
<title>slices.pdqsortCmpFunc[go.shape.struct (3 samples, 0.14%)</title><rect x="775.4" y="453" width="1.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="778.36" y="463.5" ></text>
</g>
<g >
<title>runtime.procyield (3 samples, 0.14%)</title><rect x="1115.5" y="469" width="1.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1118.52" y="479.5" ></text>
</g>
<g >
<title>runtime.notewakeup (5 samples, 0.24%)</title><rect x="1072.7" y="437" width="2.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1075.72" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.09%)</title><rect x="138.4" y="405" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="141.39" y="415.5" ></text>
</g>
<g >
<title>runtime.memequal (7 samples, 0.33%)</title><rect x="642.0" y="341" width="3.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="644.96" y="351.5" ></text>
</g>
<g >
<title>net/url.ParseRequestURI (10 samples, 0.47%)</title><rect x="130.6" y="501" width="5.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="133.61" y="511.5" ></text>
</g>
<g >
<title>runtime.heapSetType (2 samples, 0.09%)</title><rect x="132.3" y="437" width="1.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="135.28" y="447.5" ></text>
</g>
<g >
<title>bytes.IndexByte (1 samples, 0.05%)</title><rect x="146.2" y="469" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="149.18" y="479.5" ></text>
</g>
<g >
<title>runtime.startm (16 samples, 0.75%)</title><rect x="1179.4" y="485" width="8.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1182.44" y="495.5" ></text>
</g>
<g >
<title>runtime.stdcall1 (20 samples, 0.94%)</title><rect x="1122.2" y="421" width="11.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1125.19" y="431.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).cancel (16 samples, 0.75%)</title><rect x="93.4" y="517" width="8.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="96.37" y="527.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).saveMessage (1 samples, 0.05%)</title><rect x="435.2" y="261" width="0.6" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="438.20" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (7 samples, 0.33%)</title><rect x="893.2" y="181" width="3.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="896.19" y="191.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollSetDeadline (8 samples, 0.38%)</title><rect x="354.1" y="469" width="4.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="357.05" y="479.5" ></text>
</g>
<g >
<title>strconv.AppendInt (3 samples, 0.14%)</title><rect x="199.0" y="469" width="1.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="201.98" y="479.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.05%)</title><rect x="583.0" y="373" width="0.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="586.05" y="383.5" ></text>
</g>
<g >
<title>runtime.mapiternext (1 samples, 0.05%)</title><rect x="171.2" y="517" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="174.19" y="527.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).ssl (1 samples, 0.05%)</title><rect x="389.6" y="293" width="0.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="392.62" y="303.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="568.0" y="229" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="571.04" y="239.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).close.func1 (1 samples, 0.05%)</title><rect x="599.7" y="373" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="602.72" y="383.5" ></text>
</g>
<g >
<title>syscall.SyscallN (1 samples, 0.05%)</title><rect x="67.2" y="373" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="70.25" y="383.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).watchCancel (3 samples, 0.14%)</title><rect x="571.9" y="293" width="1.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="574.93" y="303.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (36 samples, 1.70%)</title><rect x="413.5" y="229" width="20.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="416.52" y="239.5" ></text>
</g>
<g >
<title>callRet (3 samples, 0.14%)</title><rect x="853.7" y="229" width="1.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="856.73" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (1 samples, 0.05%)</title><rect x="164.5" y="325" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="167.52" y="335.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.09%)</title><rect x="160.1" y="485" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="163.07" y="495.5" ></text>
</g>
<g >
<title>reflect.directlyAssignable (1 samples, 0.05%)</title><rect x="906.0" y="197" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="908.98" y="207.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (1 samples, 0.05%)</title><rect x="592.5" y="229" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="595.50" y="239.5" ></text>
</g>
<g >
<title>syscall.SyscallN (2 samples, 0.09%)</title><rect x="71.7" y="389" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="74.70" y="399.5" ></text>
</g>
<g >
<title>runtime.newproc (21 samples, 0.99%)</title><rect x="178.4" y="517" width="11.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="181.41" y="527.5" ></text>
</g>
<g >
<title>strings.(*Builder).grow (1 samples, 0.05%)</title><rect x="977.1" y="421" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="980.12" y="431.5" ></text>
</g>
<g >
<title>strings.Split (5 samples, 0.24%)</title><rect x="753.1" y="453" width="2.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="756.13" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.19%)</title><rect x="927.7" y="213" width="2.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="930.65" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.05%)</title><rect x="1060.5" y="453" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1063.49" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*operation).InitBuf (1 samples, 0.05%)</title><rect x="349.6" y="453" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="352.60" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (8 samples, 0.38%)</title><rect x="1048.8" y="469" width="4.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1051.82" y="479.5" ></text>
</g>
<g >
<title>runtime.findRunnable (2 samples, 0.09%)</title><rect x="1059.9" y="501" width="1.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1062.94" y="511.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (2 samples, 0.09%)</title><rect x="348.5" y="341" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="351.49" y="351.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*Connector).open (20 samples, 0.94%)</title><rect x="389.6" y="309" width="11.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="392.62" y="319.5" ></text>
</g>
<g >
<title>html/template.htmlEscaper (12 samples, 0.57%)</title><rect x="857.1" y="229" width="6.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="860.07" y="239.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.05%)</title><rect x="430.2" y="101" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="433.20" y="111.5" ></text>
</g>
<g >
<title>fmt.(*buffer).writeString (2 samples, 0.09%)</title><rect x="962.7" y="245" width="1.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="965.67" y="255.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.05%)</title><rect x="115.6" y="501" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="118.61" y="511.5" ></text>
</g>
<g >
<title>runtime.stdcall4 (3 samples, 0.14%)</title><rect x="1099.4" y="469" width="1.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1102.40" y="479.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.05%)</title><rect x="396.8" y="133" width="0.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="399.85" y="143.5" ></text>
</g>
<g >
<title>net.(*resolverConfig).tryUpdate (3 samples, 0.14%)</title><rect x="41.1" y="517" width="1.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="44.13" y="527.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (1 samples, 0.05%)</title><rect x="177.9" y="501" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="180.86" y="511.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.05%)</title><rect x="116.2" y="501" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="119.16" y="511.5" ></text>
</g>
<g >
<title>database/sql.(*driverConn).releaseConn (23 samples, 1.08%)</title><rect x="584.7" y="389" width="12.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="587.72" y="399.5" ></text>
</g>
<g >
<title>syscall.connectEx (22 samples, 1.04%)</title><rect x="42.8" y="341" width="12.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="45.79" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read.func1 (31 samples, 1.46%)</title><rect x="988.2" y="469" width="17.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="991.24" y="479.5" ></text>
</g>
<g >
<title>bytes.TrimLeft (2 samples, 0.09%)</title><rect x="146.7" y="485" width="1.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="149.73" y="495.5" ></text>
</g>
<g >
<title>net/http.(*conn).hijacked (1 samples, 0.05%)</title><rect x="785.4" y="373" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="788.37" y="383.5" ></text>
</g>
<g >
<title>runtime.makemap (1 samples, 0.05%)</title><rect x="159.5" y="485" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="162.51" y="495.5" ></text>
</g>
<g >
<title>runtime.pMask.read (2 samples, 0.09%)</title><rect x="1101.6" y="485" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1104.63" y="495.5" ></text>
</g>
<g >
<title>runtime.newobject (7 samples, 0.33%)</title><rect x="163.4" y="485" width="3.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="166.41" y="495.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.05%)</title><rect x="398.0" y="165" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="400.96" y="175.5" ></text>
</g>
<g >
<title>runtime.ready (4 samples, 0.19%)</title><rect x="356.3" y="405" width="2.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="359.27" y="415.5" ></text>
</g>
<g >
<title>sync.runtime_procUnpin (1 samples, 0.05%)</title><rect x="967.7" y="277" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="970.67" y="287.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="747.6" y="421" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="750.57" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (1 samples, 0.05%)</title><rect x="173.4" y="357" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="176.41" y="367.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Elem (4 samples, 0.19%)</title><rect x="810.4" y="277" width="2.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="813.38" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="107.8" y="469" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="110.82" y="479.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).incref (1 samples, 0.05%)</title><rect x="352.9" y="485" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="355.94" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.05%)</title><rect x="1041.6" y="469" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1044.60" y="479.5" ></text>
</g>
<g >
<title>runtime.startm (34 samples, 1.60%)</title><rect x="1160.5" y="501" width="18.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1163.54" y="511.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.05%)</title><rect x="146.2" y="453" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="149.18" y="463.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.05%)</title><rect x="952.7" y="261" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="955.67" y="271.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.05%)</title><rect x="167.3" y="485" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="170.30" y="495.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.05%)</title><rect x="391.8" y="117" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="394.85" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptone (1 samples, 0.05%)</title><rect x="1137.2" y="469" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1140.20" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (1 samples, 0.05%)</title><rect x="614.7" y="165" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="617.73" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="622.0" y="245" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="624.95" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="622.0" y="293" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="624.95" y="303.5" ></text>
</g>
<g >
<title>runtime.typehash (1 samples, 0.05%)</title><rect x="100.0" y="453" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="103.04" y="463.5" ></text>
</g>
<g >
<title>sync.(*entry).load (2 samples, 0.09%)</title><rect x="919.9" y="213" width="1.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="922.87" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mLockProfile).recordUnlock (1 samples, 0.05%)</title><rect x="1134.4" y="469" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1137.42" y="479.5" ></text>
</g>
<g >
<title>github.com/lib/pq.Open (24 samples, 1.13%)</title><rect x="389.6" y="341" width="13.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="392.62" y="351.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.05%)</title><rect x="1076.1" y="453" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1079.06" y="463.5" ></text>
</g>
<g >
<title>unicode/utf8.DecodeRuneInString (3 samples, 0.14%)</title><rect x="861.0" y="197" width="1.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="863.96" y="207.5" ></text>
</g>
<g >
<title>github.com/lib/pq.Array (1 samples, 0.05%)</title><rect x="744.8" y="437" width="0.5" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="747.79" y="447.5" ></text>
</g>
<g >
<title>net.(*OpError).Timeout (3 samples, 0.14%)</title><rect x="985.5" y="533" width="1.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="988.46" y="543.5" ></text>
</g>
<g >
<title>net/http.fixPragmaCacheControl (1 samples, 0.05%)</title><rect x="116.2" y="517" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="119.16" y="527.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (9 samples, 0.42%)</title><rect x="914.9" y="197" width="5.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="917.87" y="207.5" ></text>
</g>
<g >
<title>net/http.putTextprotoReader (2 samples, 0.09%)</title><rect x="125.1" y="501" width="1.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="128.05" y="511.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.05%)</title><rect x="357.9" y="373" width="0.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="360.94" y="383.5" ></text>
</g>
<g >
<title>net/url.QueryUnescape (14 samples, 0.66%)</title><rect x="972.1" y="469" width="7.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="975.12" y="479.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).startup (14 samples, 0.66%)</title><rect x="390.2" y="293" width="7.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="393.18" y="303.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.05%)</title><rect x="100.6" y="453" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="103.60" y="463.5" ></text>
</g>
<g >
<title>runtime.gostringnocopy (1 samples, 0.05%)</title><rect x="1057.2" y="485" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1060.16" y="495.5" ></text>
</g>
<g >
<title>net.(*conn).Read (30 samples, 1.41%)</title><rect x="76.7" y="485" width="16.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="79.70" y="495.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).CompareAndSwap (1 samples, 0.05%)</title><rect x="1037.2" y="501" width="0.5" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1040.15" y="511.5" ></text>
</g>
<g >
<title>syscall.SyscallN (10 samples, 0.47%)</title><rect x="586.9" y="149" width="5.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="589.94" y="159.5" ></text>
</g>
<g >
<title>net/http.(*response).write (1 samples, 0.05%)</title><rect x="968.2" y="293" width="0.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="971.23" y="303.5" ></text>
</g>
<g >
<title>runtime.stdcall2 (1 samples, 0.05%)</title><rect x="1076.6" y="437" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1079.61" y="447.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).addScannableStack (1 samples, 0.05%)</title><rect x="1056.0" y="517" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1059.05" y="527.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.05%)</title><rect x="1044.9" y="469" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1047.93" y="479.5" ></text>
</g>
<g >
<title>net.(*conn).Read (82 samples, 3.86%)</title><rect x="987.1" y="533" width="45.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="990.13" y="543.5" >net...</text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (2 samples, 0.09%)</title><rect x="669.8" y="213" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="672.76" y="223.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).IsValid (1 samples, 0.05%)</title><rect x="595.8" y="341" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="598.83" y="351.5" ></text>
</g>
<g >
<title>text/template.(*state).evalCommand (280 samples, 13.19%)</title><rect x="804.3" y="325" width="155.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="807.26" y="335.5" >text/template.(*sta..</text>
</g>
<g >
<title>text/template.findFunction (6 samples, 0.28%)</title><rect x="935.4" y="293" width="3.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="938.44" y="303.5" ></text>
</g>
<g >
<title>net/http.(*connReader).abortPendingRead (29 samples, 1.37%)</title><rect x="350.2" y="517" width="16.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="353.16" y="527.5" ></text>
</g>
<g >
<title>runtime.makeslice (3 samples, 0.14%)</title><rect x="697.0" y="373" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="699.99" y="383.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).recv1Buf (2 samples, 0.09%)</title><rect x="610.8" y="357" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="613.84" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (5 samples, 0.24%)</title><rect x="883.7" y="197" width="2.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="886.74" y="207.5" ></text>
</g>
<g >
<title>sync.runtime_doSpin (1 samples, 0.05%)</title><rect x="1035.5" y="501" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1038.48" y="511.5" ></text>
</g>
<g >
<title>internal/bytealg.MakeNoZero (1 samples, 0.05%)</title><rect x="977.1" y="405" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="980.12" y="415.5" ></text>
</g>
<g >
<title>database/sql.(*DB).retry (359 samples, 16.91%)</title><rect x="380.2" y="421" width="199.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="383.17" y="431.5" >database/sql.(*DB).retry</text>
</g>
<g >
<title>runtime.checkdead (1 samples, 0.05%)</title><rect x="1113.3" y="453" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1116.30" y="463.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (10 samples, 0.47%)</title><rect x="586.9" y="213" width="5.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="589.94" y="223.5" ></text>
</g>
<g >
<title>context.(*afterFuncCtx).cancel (1 samples, 0.05%)</title><rect x="55.6" y="373" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="58.58" y="383.5" ></text>
</g>
<g >
<title>runtime.convT64 (1 samples, 0.05%)</title><rect x="613.1" y="325" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="616.06" y="335.5" ></text>
</g>
<g >
<title>github.com/lib/pq.DialOpen (24 samples, 1.13%)</title><rect x="389.6" y="325" width="13.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="392.62" y="335.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (31 samples, 1.46%)</title><rect x="76.1" y="517" width="17.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="79.14" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.19%)</title><rect x="613.6" y="309" width="2.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="616.62" y="319.5" ></text>
</g>
<g >
<title>internal/poll.execIO (81 samples, 3.82%)</title><rect x="987.1" y="485" width="45.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="990.13" y="495.5" >inte..</text>
</g>
<g >
<title>runtime.cgocall (1 samples, 0.05%)</title><rect x="396.8" y="101" width="0.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="399.85" y="111.5" ></text>
</g>
<g >
<title>runtime.growslice (6 samples, 0.28%)</title><rect x="745.3" y="437" width="3.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="748.35" y="447.5" ></text>
</g>
<g >
<title>internal/abi.(*FuncType).InSlice (1 samples, 0.05%)</title><rect x="808.7" y="277" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="811.71" y="287.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtS (2 samples, 0.09%)</title><rect x="962.7" y="261" width="1.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="965.67" y="271.5" ></text>
</g>
<g >
<title>net/http.(*response).Write (1 samples, 0.05%)</title><rect x="968.2" y="309" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="971.23" y="319.5" ></text>
</g>
<g >
<title>syscall.SyscallN (3 samples, 0.14%)</title><rect x="68.4" y="389" width="1.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="71.36" y="399.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.05%)</title><rect x="567.5" y="197" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="570.48" y="207.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (1 samples, 0.05%)</title><rect x="1114.4" y="485" width="0.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1117.41" y="495.5" ></text>
</g>
<g >
<title>net.(*sysDialer).dialParallel (1 samples, 0.05%)</title><rect x="400.2" y="245" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="403.18" y="255.5" ></text>
</g>
<g >
<title>net/http.exactMatch (1 samples, 0.05%)</title><rect x="371.3" y="469" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="374.28" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.19%)</title><rect x="356.3" y="437" width="2.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="359.27" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.09%)</title><rect x="669.8" y="245" width="1.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="672.76" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (34 samples, 1.60%)</title><rect x="1160.5" y="485" width="18.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1163.54" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.Type (1 samples, 0.05%)</title><rect x="831.5" y="245" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="834.50" y="255.5" ></text>
</g>
<g >
<title>net/http.(*connReader).startBackgroundRead (23 samples, 1.08%)</title><rect x="177.3" y="533" width="12.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="180.30" y="543.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="565.3" y="213" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="568.26" y="223.5" ></text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.05%)</title><rect x="1133.3" y="501" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1136.31" y="511.5" ></text>
</g>
<g >
<title>runtime.(*_panic).nextDefer (1 samples, 0.05%)</title><rect x="136.2" y="501" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="139.17" y="511.5" ></text>
</g>
<g >
<title>terch/utils.sanitizeWord (17 samples, 0.80%)</title><rect x="762.0" y="437" width="9.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="765.02" y="447.5" ></text>
</g>
<g >
<title>runtime.semasleep (8 samples, 0.38%)</title><rect x="1117.2" y="469" width="4.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1120.19" y="479.5" ></text>
</g>
<g >
<title>net/http.(*connReader).backgroundRead (93 samples, 4.38%)</title><rect x="984.3" y="549" width="51.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="987.35" y="559.5" >net/h..</text>
</g>
<g >
<title>indexbytebody (1 samples, 0.05%)</title><rect x="149.0" y="453" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="151.95" y="463.5" ></text>
</g>
<g >
<title>strconv.parseFloatPrefix (67 samples, 3.16%)</title><rect x="700.9" y="357" width="37.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="703.88" y="367.5" >str..</text>
</g>
<g >
<title>errors.Is (1 samples, 0.05%)</title><rect x="596.9" y="357" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="599.94" y="367.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="175.6" y="501" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="178.63" y="511.5" ></text>
</g>
<g >
<title>runtime.osPreemptExtEnter (1 samples, 0.05%)</title><rect x="92.3" y="341" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="95.26" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.05%)</title><rect x="92.8" y="421" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="95.82" y="431.5" ></text>
</g>
<g >
<title>internal/poll.setDeadlineImpl (16 samples, 0.75%)</title><rect x="353.5" y="485" width="8.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="356.50" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="567.5" y="165" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="570.48" y="175.5" ></text>
</g>
<g >
<title>terch/utils.CalcQueryVec (31 samples, 1.46%)</title><rect x="755.9" y="453" width="17.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="758.91" y="463.5" ></text>
</g>
<g >
<title>github.com/lib/pq.defaultDialer.DialContext (5 samples, 0.24%)</title><rect x="398.0" y="277" width="2.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="400.96" y="287.5" ></text>
</g>
<g >
<title>runtime.getMCache (1 samples, 0.05%)</title><rect x="865.4" y="133" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="868.40" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="164.5" y="421" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="167.52" y="431.5" ></text>
</g>
<g >
<title>html/template.urlNormalizer (42 samples, 1.98%)</title><rect x="863.7" y="229" width="23.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="866.74" y="239.5" >h..</text>
</g>
<g >
<title>bytes.IndexByte (1 samples, 0.05%)</title><rect x="564.7" y="245" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="567.71" y="255.5" ></text>
</g>
<g >
<title>runtime.heapSetType (2 samples, 0.09%)</title><rect x="174.5" y="485" width="1.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="177.52" y="495.5" ></text>
</g>
<g >
<title>runtime.(*gQueue).pop (1 samples, 0.05%)</title><rect x="1067.2" y="485" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1070.16" y="495.5" ></text>
</g>
<g >
<title>runtime.cgocall (22 samples, 1.04%)</title><rect x="42.8" y="293" width="12.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="45.79" y="303.5" ></text>
</g>
<g >
<title>runtime.cgocall (3 samples, 0.14%)</title><rect x="70.0" y="373" width="1.7" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="73.03" y="383.5" ></text>
</g>
<g >
<title>net/http.(*conn).readRequest (131 samples, 6.17%)</title><rect x="103.9" y="533" width="72.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="106.93" y="543.5" >net/http..</text>
</g>
<g >
<title>reflect.elem (1 samples, 0.05%)</title><rect x="830.9" y="229" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="833.94" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="622.0" y="261" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="624.95" y="271.5" ></text>
</g>
<g >
<title>syscall.UTF16ToString (1 samples, 0.05%)</title><rect x="402.4" y="277" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="405.41" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.14%)</title><rect x="581.9" y="405" width="1.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="584.94" y="415.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteByte (4 samples, 0.19%)</title><rect x="977.7" y="453" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="980.68" y="463.5" ></text>
</g>
<g >
<title>internal/abi.Name.ReadVarint (1 samples, 0.05%)</title><rect x="947.7" y="213" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="950.66" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (7 samples, 0.33%)</title><rect x="137.3" y="501" width="3.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="140.28" y="511.5" ></text>
</g>
<g >
<title>bytes.IndexByte (1 samples, 0.05%)</title><rect x="143.4" y="469" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="146.40" y="479.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.05%)</title><rect x="186.7" y="421" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="189.75" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="747.0" y="405" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="750.01" y="415.5" ></text>
</g>
<g >
<title>runtime.inUserArenaChunk (1 samples, 0.05%)</title><rect x="67.8" y="405" width="0.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="70.80" y="415.5" ></text>
</g>
<g >
<title>runtime.mcall (144 samples, 6.78%)</title><rect x="1056.0" y="549" width="80.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1059.05" y="559.5" >runtime.m..</text>
</g>
<g >
<title>database/sql.(*DB).putConnDBLocked (2 samples, 0.09%)</title><rect x="585.8" y="357" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="588.83" y="367.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.05%)</title><rect x="755.9" y="421" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="758.91" y="431.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (1 samples, 0.05%)</title><rect x="391.3" y="117" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="394.29" y="127.5" ></text>
</g>
<g >
<title>time.loadTzinfoFromDirOrZip (12 samples, 0.57%)</title><rect x="390.7" y="213" width="6.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="393.73" y="223.5" ></text>
</g>
<g >
<title>runtime.interhash (1 samples, 0.05%)</title><rect x="100.0" y="469" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="103.04" y="479.5" ></text>
</g>
<g >
<title>runtime.mapassign (5 samples, 0.24%)</title><rect x="109.5" y="485" width="2.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="112.49" y="495.5" ></text>
</g>
<g >
<title>runtime.semawakeup (20 samples, 0.94%)</title><rect x="1122.2" y="437" width="11.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1125.19" y="447.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (4 samples, 0.19%)</title><rect x="683.1" y="309" width="2.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="686.09" y="319.5" ></text>
</g>
<g >
<title>net/textproto.CanonicalMIMEHeaderKey (1 samples, 0.05%)</title><rect x="205.1" y="453" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="208.09" y="463.5" ></text>
</g>
<g >
<title>database/sql.(*driverConn).resetSession (5 samples, 0.24%)</title><rect x="386.8" y="357" width="2.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="389.84" y="367.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (3 samples, 0.14%)</title><rect x="1099.4" y="485" width="1.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1102.40" y="495.5" ></text>
</g>
<g >
<title>syscall.(*LazyProc).mustFind (2 samples, 0.09%)</title><rect x="439.6" y="165" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="442.65" y="175.5" ></text>
</g>
<g >
<title>database/sql.(*DB).Query (362 samples, 17.05%)</title><rect x="378.5" y="453" width="201.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="381.51" y="463.5" >database/sql.(*DB).Query</text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.05%)</title><rect x="622.0" y="229" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="624.95" y="239.5" ></text>
</g>
<g >
<title>reflect.Value.call (184 samples, 8.67%)</title><rect x="832.1" y="245" width="102.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="835.05" y="255.5" >reflect.Valu..</text>
</g>
<g >
<title>internal/poll.(*FD).writeUnlock (1 samples, 0.05%)</title><rect x="209.0" y="437" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="211.98" y="447.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).memoryLimitHeapGoal (1 samples, 0.05%)</title><rect x="578.0" y="277" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="581.05" y="287.5" ></text>
</g>
<g >
<title>time.LoadLocation (13 samples, 0.61%)</title><rect x="390.2" y="261" width="7.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="393.18" y="271.5" ></text>
</g>
<g >
<title>internal/poll.execIO (29 samples, 1.37%)</title><rect x="77.3" y="437" width="16.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="80.25" y="447.5" ></text>
</g>
<g >
<title>time.Time.Date (6 samples, 0.28%)</title><rect x="201.2" y="469" width="3.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="204.20" y="479.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="867.1" y="133" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="870.07" y="143.5" ></text>
</g>
<g >
<title>runtime.pMask.set (2 samples, 0.09%)</title><rect x="187.3" y="437" width="1.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="190.31" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.05%)</title><rect x="928.8" y="181" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="931.77" y="191.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="192.3" y="469" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="195.31" y="479.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.05%)</title><rect x="1076.6" y="453" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1079.61" y="463.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.05%)</title><rect x="819.8" y="261" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="822.83" y="271.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).Next.func1 (36 samples, 1.70%)</title><rect x="603.1" y="405" width="20.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="606.06" y="415.5" ></text>
</g>
<g >
<title>internal/poll.execIO (2 samples, 0.09%)</title><rect x="593.1" y="229" width="1.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="596.05" y="239.5" ></text>
</g>
<g >
<title>strconv.atof64 (65 samples, 3.06%)</title><rect x="702.0" y="341" width="36.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="704.99" y="351.5" >str..</text>
</g>
<g >
<title>runtime.stopm (2 samples, 0.09%)</title><rect x="1112.7" y="485" width="1.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1115.74" y="495.5" ></text>
</g>
<g >
<title>net/textproto.(*Reader).upcomingHeaderKeys (6 samples, 0.28%)</title><rect x="151.2" y="485" width="3.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="154.18" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (1 samples, 0.05%)</title><rect x="968.8" y="325" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="971.78" y="335.5" ></text>
</g>
<g >
<title>text/template.(*state).walk (346 samples, 16.30%)</title><rect x="779.8" y="437" width="192.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="782.81" y="447.5" >text/template.(*state).walk</text>
</g>
<g >
<title>database/sql.(*Rows).close (29 samples, 1.37%)</title><rect x="584.7" y="405" width="16.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="587.72" y="415.5" ></text>
</g>
<g >
<title>reflect.(*rtype).In (1 samples, 0.05%)</title><rect x="812.6" y="277" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="815.60" y="287.5" ></text>
</g>
<g >
<title>syscall.Setsockopt (1 samples, 0.05%)</title><rect x="67.2" y="405" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="70.25" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (1 samples, 0.05%)</title><rect x="173.4" y="341" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="176.41" y="351.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="108.4" y="485" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="111.38" y="495.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.05%)</title><rect x="700.3" y="357" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="703.33" y="367.5" ></text>
</g>
<g >
<title>io.ReadFull (1 samples, 0.05%)</title><rect x="397.4" y="261" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="400.40" y="271.5" ></text>
</g>
<g >
<title>runtime.tracebackPCs (1 samples, 0.05%)</title><rect x="391.8" y="69" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="394.85" y="79.5" ></text>
</g>
<g >
<title>database/sql.(*Rows).close (3 samples, 0.14%)</title><rect x="581.9" y="421" width="1.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="584.94" y="431.5" ></text>
</g>
<g >
<title>sync/atomic.(*Int32).Add (1 samples, 0.05%)</title><rect x="938.2" y="277" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="941.21" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="928.2" y="117" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="931.21" y="127.5" ></text>
</g>
<g >
<title>github.com/lib/pq.decode (18 samples, 0.85%)</title><rect x="613.1" y="357" width="10.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="616.06" y="367.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_reacquired (1 samples, 0.05%)</title><rect x="91.7" y="309" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="94.71" y="319.5" ></text>
</g>
<g >
<title>runtime.reflectcallmove (2 samples, 0.09%)</title><rect x="854.3" y="213" width="1.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="857.29" y="223.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.05%)</title><rect x="567.5" y="213" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="570.48" y="223.5" ></text>
</g>
<g >
<title>net.(*Resolver).internetAddrList (4 samples, 0.19%)</title><rect x="398.0" y="229" width="2.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="400.96" y="239.5" ></text>
</g>
<g >
<title>text/template.(*state).validateType (9 samples, 0.42%)</title><rect x="820.4" y="277" width="5.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="823.38" y="287.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.05%)</title><rect x="123.4" y="469" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="126.39" y="479.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.09%)</title><rect x="790.9" y="373" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="793.92" y="383.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (3 samples, 0.14%)</title><rect x="68.4" y="405" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="71.36" y="415.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="1036.6" y="501" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1039.59" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.05%)</title><rect x="909.9" y="133" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="912.87" y="143.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.05%)</title><rect x="10.0" y="485" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.05%)</title><rect x="1138.3" y="485" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1141.31" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="928.2" y="165" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="931.21" y="175.5" ></text>
</g>
<g >
<title>runtime.newobject (6 samples, 0.28%)</title><rect x="897.6" y="213" width="3.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="900.64" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (3 samples, 0.14%)</title><rect x="1039.9" y="469" width="1.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1042.93" y="479.5" ></text>
</g>
<g >
<title>sync.runtime_procUnpin (1 samples, 0.05%)</title><rect x="965.4" y="277" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="968.45" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.09%)</title><rect x="138.4" y="453" width="1.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="141.39" y="463.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uintptr).Load (1 samples, 0.05%)</title><rect x="1135.5" y="501" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1138.53" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.05%)</title><rect x="859.8" y="181" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="862.84" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.09%)</title><rect x="113.9" y="501" width="1.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="116.94" y="511.5" ></text>
</g>
<g >
<title>runtime.schedule (4 samples, 0.19%)</title><rect x="1059.4" y="517" width="2.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1062.38" y="527.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.05%)</title><rect x="1034.9" y="501" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1037.93" y="511.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).position (1 samples, 0.05%)</title><rect x="1069.9" y="485" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1072.94" y="495.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (228 samples, 10.74%)</title><rect x="438.0" y="213" width="126.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="440.98" y="223.5" >internal/poll.(..</text>
</g>
<g >
<title>runtime.convTslice (6 samples, 0.28%)</title><rect x="613.6" y="325" width="3.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="616.62" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.05%)</title><rect x="745.9" y="373" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="748.90" y="383.5" ></text>
</g>
<g >
<title>net.SplitHostPort (1 samples, 0.05%)</title><rect x="374.1" y="469" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="377.06" y="479.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (30 samples, 1.41%)</title><rect x="415.2" y="181" width="16.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="418.19" y="191.5" ></text>
</g>
<g >
<title>runtime.strhash (2 samples, 0.09%)</title><rect x="937.1" y="261" width="1.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="940.10" y="271.5" ></text>
</g>
<g >
<title>runtime.wirep (2 samples, 0.09%)</title><rect x="1031.0" y="373" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1034.04" y="383.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (3 samples, 0.14%)</title><rect x="112.3" y="485" width="1.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="115.27" y="495.5" ></text>
</g>
<g >
<title>runtime.startm (5 samples, 0.24%)</title><rect x="1072.7" y="453" width="2.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1075.72" y="463.5" ></text>
</g>
<g >
<title>runtime.interhash (1 samples, 0.05%)</title><rect x="55.6" y="325" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="58.58" y="335.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.05%)</title><rect x="958.2" y="261" width="0.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="961.22" y="271.5" ></text>
</g>
<g >
<title>github.com/lib/pq.NewConnector (3 samples, 0.14%)</title><rect x="400.7" y="309" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="403.74" y="319.5" ></text>
</g>
<g >
<title>strconv.readFloat (46 samples, 2.17%)</title><rect x="712.0" y="325" width="25.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="715.00" y="335.5" >s..</text>
</g>
<g >
<title>syscall.Syscall9 (220 samples, 10.36%)</title><rect x="441.3" y="149" width="122.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="444.31" y="159.5" >syscall.Syscall9</text>
</g>
<g >
<title>runtime.memequal (1 samples, 0.05%)</title><rect x="952.1" y="229" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="955.11" y="239.5" ></text>
</g>
<g >
<title>sync.(*rlocker).Lock (1 samples, 0.05%)</title><rect x="623.1" y="405" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="626.07" y="415.5" ></text>
</g>
<g >
<title>runtime.mput (1 samples, 0.05%)</title><rect x="1113.3" y="469" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1116.30" y="479.5" ></text>
</g>
<g >
<title>strconv.formatBits (1 samples, 0.05%)</title><rect x="197.9" y="437" width="0.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="200.87" y="447.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (3 samples, 0.14%)</title><rect x="161.7" y="485" width="1.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="164.74" y="495.5" ></text>
</g>
<g >
<title>text/template.(*state).evalPipeline (286 samples, 13.47%)</title><rect x="800.9" y="341" width="159.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="803.93" y="351.5" >text/template.(*stat..</text>
</g>
<g >
<title>html/template.urlProcessor (40 samples, 1.88%)</title><rect x="864.8" y="213" width="22.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="867.85" y="223.5" >h..</text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (1 samples, 0.05%)</title><rect x="1135.0" y="501" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1137.97" y="511.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (2 samples, 0.09%)</title><rect x="170.1" y="517" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="173.08" y="527.5" ></text>
</g>
<g >
<title>github.com/lib/pq.(*conn).recv1 (38 samples, 1.79%)</title><rect x="412.4" y="277" width="21.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="415.41" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.05%)</title><rect x="164.5" y="373" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="167.52" y="383.5" ></text>
</g>
<g >
<title>runtime.newobject (6 samples, 0.28%)</title><rect x="131.7" y="469" width="3.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="134.72" y="479.5" ></text>
</g>
<g >
<title>runtime.cgocall (10 samples, 0.47%)</title><rect x="586.9" y="133" width="5.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="589.94" y="143.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (1 samples, 0.05%)</title><rect x="431.3" y="165" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="434.31" y="175.5" ></text>
</g>
<g >
<title>runtime.heapSetType (1 samples, 0.05%)</title><rect x="746.5" y="405" width="0.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="749.46" y="415.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (4 samples, 0.19%)</title><rect x="909.3" y="165" width="2.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="912.31" y="175.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.05%)</title><rect x="158.4" y="453" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="161.40" y="463.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.05%)</title><rect x="1121.6" y="453" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1124.63" y="463.5" ></text>
</g>
<g >
<title>sync/atomic.(*Int32).Add (1 samples, 0.05%)</title><rect x="749.8" y="437" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="752.79" y="447.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (29 samples, 1.37%)</title><rect x="1039.9" y="549" width="16.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1042.93" y="559.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (19 samples, 0.89%)</title><rect x="1045.5" y="517" width="10.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1048.49" y="527.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (2 samples, 0.09%)</title><rect x="593.1" y="261" width="1.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="596.05" y="271.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (5 samples, 0.24%)</title><rect x="116.7" y="501" width="2.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="119.72" y="511.5" ></text>
</g>
<g >
<title>net/http.(*response).Write (7 samples, 0.33%)</title><rect x="795.9" y="341" width="3.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="798.93" y="351.5" ></text>
</g>
<g >
<title>bytes.Index (2 samples, 0.09%)</title><rect x="152.3" y="453" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="155.29" y="463.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (287 samples, 13.52%)</title><rect x="190.6" y="517" width="159.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="193.64" y="527.5" >bufio.(*Writer).Flush</text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.05%)</title><rect x="401.9" y="261" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="404.85" y="271.5" ></text>
</g>
<g >
<title>net/http.Header.writeSubset (4 samples, 0.19%)</title><rect x="205.6" y="469" width="2.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="208.65" y="479.5" ></text>
</g>
<g >
<title>indexbytebody (1 samples, 0.05%)</title><rect x="143.4" y="453" width="0.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="146.40" y="463.5" ></text>
</g>
<g >
<title>html/template.stringify (2 samples, 0.09%)</title><rect x="862.6" y="213" width="1.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="865.62" y="223.5" ></text>
</g>
<g >
<title>bytes.Cut (1 samples, 0.05%)</title><rect x="146.2" y="485" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="149.18" y="495.5" ></text>
</g>
<g >
<title>net.internetSocket (52 samples, 2.45%)</title><rect x="42.8" y="469" width="28.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="45.79" y="479.5" >ne..</text>
</g>
<g >
<title>net/http.(*conn).hijacked (1 samples, 0.05%)</title><rect x="103.4" y="533" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="106.38" y="543.5" ></text>
</g>
<g >
<title>context.removeChild (13 samples, 0.61%)</title><rect x="94.5" y="501" width="7.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="97.48" y="511.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (2 samples, 0.09%)</title><rect x="71.7" y="405" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="74.70" y="415.5" ></text>
</g>
<g >
<title>text/template.(*state).evalField (34 samples, 1.60%)</title><rect x="939.9" y="277" width="18.9" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="942.88" y="287.5" ></text>
</g>
<g >
<title>net.(*sysDialer).dialSerial (54 samples, 2.54%)</title><rect x="42.8" y="533" width="30.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="45.79" y="543.5" >ne..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.05%)</title><rect x="899.3" y="181" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="902.31" y="191.5" ></text>
</g>
<g >
<title>runtime.netpollgoready.goready.func1 (4 samples, 0.19%)</title><rect x="356.3" y="421" width="2.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="359.27" y="431.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.05%)</title><rect x="198.4" y="469" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="201.42" y="479.5" ></text>
</g>
<g >
<title>syscall.Syscall (41 samples, 1.93%)</title><rect x="1009.4" y="453" width="22.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1012.36" y="463.5" >s..</text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.05%)</title><rect x="164.5" y="405" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="167.52" y="415.5" ></text>
</g>
<g >
<title>runtime.(*randomOrder).start (1 samples, 0.05%)</title><rect x="1070.5" y="485" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1073.50" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.05%)</title><rect x="923.8" y="165" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="926.76" y="175.5" ></text>
</g>
<g >
<title>runtime.newarray (13 samples, 0.61%)</title><rect x="890.4" y="197" width="7.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="893.41" y="207.5" ></text>
</g>
<g >
<title>runtime.resetspinning (21 samples, 0.99%)</title><rect x="1121.6" y="501" width="11.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1124.63" y="511.5" ></text>
</g>
<g >
<title>runtime.runqgrab.osyield.func1 (1 samples, 0.05%)</title><rect x="1060.5" y="437" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1063.49" y="447.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (1 samples, 0.05%)</title><rect x="130.1" y="485" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="133.06" y="495.5" ></text>
</g>
<g >
<title>runtime.convTstring (6 samples, 0.28%)</title><rect x="617.0" y="325" width="3.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="619.95" y="335.5" ></text>
</g>
<g >
<title>strings.(*Builder).Grow (4 samples, 0.19%)</title><rect x="865.4" y="181" width="2.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="868.40" y="191.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.05%)</title><rect x="919.3" y="181" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="922.32" y="191.5" ></text>
</g>
<g >
<title>runtime.cgocall (25 samples, 1.18%)</title><rect x="416.3" y="69" width="13.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="419.30" y="79.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.05%)</title><rect x="391.8" y="37" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="394.85" y="47.5" ></text>
</g>
<g >
<title>reflect.flag.kind (1 samples, 0.05%)</title><rect x="799.8" y="341" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="802.82" y="351.5" ></text>
</g>
<g >
<title>text/template.(*state).walk (343 samples, 16.16%)</title><rect x="781.5" y="421" width="190.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="784.47" y="431.5" >text/template.(*state).w..</text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.09%)</title><rect x="693.1" y="325" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="696.10" y="335.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.05%)</title><rect x="1136.1" y="485" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1139.09" y="495.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.09%)</title><rect x="752.0" y="437" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="755.02" y="447.5" ></text>
</g>
<g >
<title>runtime.roundupsize (1 samples, 0.05%)</title><rect x="770.9" y="405" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="773.91" y="415.5" ></text>
</g>
<g >
<title>runtime.reflectcall (1 samples, 0.05%)</title><rect x="931.0" y="229" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="933.99" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.05%)</title><rect x="173.4" y="389" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="176.41" y="399.5" ></text>
</g>
<g >
<title>reflect.Value.MethodByName (2 samples, 0.09%)</title><rect x="953.2" y="261" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="956.22" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.09%)</title><rect x="566.4" y="213" width="1.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="569.37" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.05%)</title><rect x="400.7" y="245" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="403.74" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).SetReadDeadline (18 samples, 0.85%)</title><rect x="352.4" y="501" width="10.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="355.38" y="511.5" ></text>
</g>
<g >
<title>syscall.SyscallN (1 samples, 0.05%)</title><rect x="396.8" y="117" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="399.85" y="127.5" ></text>
</g>
<g >
<title>text/template.(*state).walk (317 samples, 14.93%)</title><rect x="794.8" y="373" width="176.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="797.81" y="383.5" >text/template.(*state)..</text>
</g>
<g >
<title>runtime.gdestroy (5 samples, 0.24%)</title><rect x="1056.6" y="517" width="2.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1059.60" y="527.5" ></text>
</g>
<g >
<title>net.(*netFD).Close (11 samples, 0.52%)</title><rect x="586.9" y="245" width="6.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="589.94" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (2 samples, 0.09%)</title><rect x="138.4" y="357" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="141.39" y="367.5" ></text>
</g>
<g >
<title>text/template.(*state).walk (317 samples, 14.93%)</title><rect x="794.8" y="357" width="176.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="797.81" y="367.5" >text/template.(*state)..</text>
</g>
<g >
<title>syscall.Syscall (20 samples, 0.94%)</title><rect x="56.1" y="373" width="11.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="59.13" y="383.5" ></text>
</g>
</g>
</svg>
